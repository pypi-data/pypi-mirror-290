variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip

default:
  image: python:latest
  tags: ["docker", "ssec_shared"] # use shared runners at the SSEC
    
workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

before_script:
  - python --version ; pip --version # For debugging
  - pip install hatch

stages:
  - lint
  - static-analysis
  - test
  - build
  - deploy

lint-job:
  stage: lint
  script:
    - hatch fmt --check

static-analysis-job:
  stage: static-analysis
  script:
    - hatch run types:check src/

test:unit:
  stage: test
  script:
    - hatch run cov
  artifacts:
    untracked: false
    when: on_success
    expire_in: "30 days"
    reports:
      coverage_report:
        coverage_format: cobertura
        path: ./coverage.xml
  coverage: /(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/

build:dist:
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG =~ /\d+\.\d+\.\d+$/
  script:
    - hatch build
  artifacts:
    expire_in: "1 day"
    paths:
      - ./dist/*.whl
      - ./dist/*.tar.gz

deploy:packages:release:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG =~ /\d+\.\d+\.\d+$/
  script:
    - hatch publish -y -u __token__ -a $PYPI_TOKEN

