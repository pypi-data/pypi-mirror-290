[project]
name = "sleepfake"
version = "1.0.7"
description = "Fake the time.sleep/asyncio.sleep function during tests."
authors = [
    { name = "Guillaume Pouyat", email = "guillaume.pouyat@protonmail.com" },
]
dependencies = [
    "freezegun>=1.4.0",
    "pytest>=8.0.2",
    "pytz>=2024.1",
    "pre-commit>=3.6.2",
]
readme = "README.md"
license = 'MIT'
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Programming Language :: Python',
    'Programming Language :: Python :: Implementation :: CPython',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Topic :: Software Development :: Testing :: Mocking',
]
requires-python = '>=3.8'

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "mypy>=1.8.0",
    "types-pytz>=2024.1.0.20240203",
    "pytest-asyncio>=0.23.5",
    "coverage>=7.4.3",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/sleepfake"]

[tool.rye.scripts]
test = "pytest -vvv tests"
"coverage:report" = "coverage report -m"
"coverage:launch" = "coverage run --source src -m pytest -vvv"
lint = { chain = ["lint:format", "lint:ruff", "lint:mypy"] }
"lint:mypy" = "mypy --install-types src tests"
"lint:ruff" = "ruff check ."
"lint:format" = "ruff format ."
pre-commit = "pre-commit run --all-files"
pre-commit-install = "pre-commit install"
pre-commit-update = "pre-commit autoupdate"

[tool.mypy]
platform = 'linux'
ignore_missing_imports = true
follow_imports = 'skip'
strict_optional = true
disallow_untyped_calls = true
pretty = true
disallow_incomplete_defs = true

warn_unused_configs = true
show_error_codes = true

warn_redundant_casts = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true


[tool.ruff]
# Always generate Python 3.11-compatible code.
target-version = "py38"
exclude = [".venv"]
fix = true
lint.select = ["ALL"]
lint.ignore = [
    "ANN102",
    "N812",
    "C417",
    "E501",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "S101",
    "RET501",
    "BLE001",
    "D213",
    "ANN401",
    "EM101",
    "EM102",
    "PLW0602",
    "ANN101",
    "FBT001",
    "D203",
    "EXE001",
    "COM812",
    "ISC001",
]
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
lint.unfixable = ["RET501"]

line-length = 100

[tool.ruff.lint.flake8-annotations]
suppress-none-returning = true

[tool.ruff.lint.per-file-ignores]
"orm.py" = ["N815"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[project.entry-points.pytest11]
pytest11 = "sleepfake.plugin"
