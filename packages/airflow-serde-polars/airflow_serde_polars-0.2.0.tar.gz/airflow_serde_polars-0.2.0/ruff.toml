line-length = 88
unsafe-fixes = true
target-version = "py38"

[lint]
select = ["ALL"]
fixable = [
    "D",
    'UP',
    'F401',    # unused imports
    "F522",    # string-dot-format-extra-named-arguments
    "F541",    # f-string-missing-placeholders
    "W292",    # no-new-line-at-end-of-file
    "E711",    # none-comparison
    "E712",    # true-false-comparison
    "E713",    # not-in-test
    "E714",    # not-is-test
    "I001",    # unsorted-imports
    "COM812",  # trailing-comma-missing
    "Q000",    # bad-quotes-inline-string
    "Q001",    # bad-quotes-multiline-string
    "SIM108",  # if-else-block-instead-of-if-exp	
    "E501",    # line-too-long
    "FLY002",  # static-join-to-f-string
    "PLW3301", # nested-min-max
    "RUF010",  # explicit-f-string-type-conversion 
    "RUF100",  # unused-noqa
    "SIM110",  # reimplemented-builtin
    "RET504",  # unnecessary-assign
    "I002",    # missing-required-import
    "PIE808",  # unnecessary-range-start
    "RUF020",  # never-union 
    "NPY201",  # numpy2-deprecation
]
ignore = [
    "TD",
    'E712',    # TrueFalseComparison # sqlalchemy
    "E711",    # none-comparison # sqlalchemy
    "EM101",   # raw-string-in-exception
    "TRY003",  # raise-vanilla-args
    "ANN101",  # missing-type-self
    "ANN102",  # missing-type-cls
    "ANN401",  # dynamically-typed-expression
    "FBT002",  # boolean-default-value-in-function-definition
    "PGH003",  # blanket-type-ignore
    "SIM117",  # multiple-with-statements # python3.8
    "B905",    # zip-without-explicit-strict
    "PD010",   # use-of-dot-pivot-or-unstack
    "D105",    # undocumented-magic-method
    "TD",      # flake8-todos
    "FIX",     # flake8-fixme
    "PLR2044", # empty-comment
    # ruff format
    "W191",   # tab-indentation
    "E111",   # indentation-with-invalid-multiple
    "E114",   # indentation-with-invalid-multiple-comment
    "E117",   # over-indented
    "D206",   # indent-with-spaces
    "D300",   # triple-single-quotes
    "Q000",   # bad-quotes-inline-string
    "Q001",   # bad-quotes-multiline-string
    "Q002",   # bad-quotes-docstring
    "Q003",   # avoidable-escaped-quote
    "COM812", # missing-trailing-comma
    "COM819", # prohibited-trailing-comma
    "ISC001", # single-line-implicit-string-concatenation
    "ISC002", # multi-line-implicit-string-concatenation
    # pydocstyle # google default
    "D203",
    "D204",
    "D213",
    "D215",
    "D400",
    "D401",
    "D404",
    "D406",
    "D407",
    "D408",
    "D409",
    "D413",
    # pydocstyle # ignore
    "D212", # multi-line-summary-first-line
    "D403", # first-line-capitalized
    "D415", # ends-in-punctuation
    "D107", # undocumented-public-init
    "D105", # undocumented-magic-method
    # pydocstyle # TODO
    "D100", # undocumented-public-module
    "D104", # undocumented-public-package
]

[lint.per-file-ignores]
"src/airflow_serde_polars/dump/v*.py" = ["D103"]
"src/airflow_serde_polars/load/v*.py" = ["D103"]
"tests/**/*.py" = [
    "TCH001",
    "TCH002",
    "TCH003",
    "S101",
    "D101",
    "ANN001",
    "ANN201",
    "PLR0133",
    "W605",
    "D103",
    "D102",
    "PLR2004",
]

[format]
indent-style = "space"
preview = true
quote-style = "double"
skip-magic-trailing-comma = true

[lint.isort]
known-local-folder = ["airflow_serde_polars"]
required-imports = ["from __future__ import annotations"]
# ruff format
force-single-line = false
force-wrap-aliases = false
split-on-trailing-comma = false

[lint.pydocstyle]
convention = "google"

[lint.flake8-type-checking]
exempt-modules = ["typing", "typing_extensions"]
