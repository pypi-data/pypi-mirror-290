[tool.poetry]
name = "guppylang"
version = "0.9.0"
description = "Pythonic quantum-classical programming language"
authors = ["Mark Koch <mark.koch@quantinuum.com>"]
license = "Apache-2.0"
readme = "quickstart.md"
repository = "https://github.com/CQCL/guppy"

[tool.poetry.dependencies]
python = "^3.10"
graphviz = "^0.20.1"
networkx = "^3.2.1"
pydantic = "^2.7.0b1"
typing-extensions = "^4.9.0"
hugr = "^0.5.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-cov = "^4.1.0"
mypy = "<=1.10.0"
pre-commit = "^3.6.0"
ruff = ">=0.4.5"
maturin = "^1.4.0"
pytket = "*"

[tool.poetry.group.validation]
optional = true

[tool.poetry.group.validation.dependencies]
guppyval = { path = "validator" }

[tool.poetry.group.execution]
optional = true

[tool.poetry.group.execution.dependencies]
execute_llvm = { path = "execute_llvm" }

[tool.poetry.group.pytket]
optional = true

[tool.poetry.group.pytket.dependencies]
pytket = { version = "^1.30.0" }
tket2 = { version = "^0.2.0" }

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.6"
sphinx-book-theme = "^1.1.2"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
plugins = ["pydantic.mypy"]
strict = true
allow_redefinition = true


[tool.coverage.report]
exclude_also = [
    # Don't complain about missing coverage on typing imports
    "if TYPE_CHECKING:",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    "raise InternalGuppyError",

    # Don't complain about abstract methods, they aren't run:
    "@abstractmethod",
]
