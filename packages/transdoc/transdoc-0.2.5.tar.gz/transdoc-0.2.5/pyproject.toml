[tool.poetry]
name = "transdoc"
version = "0.2.5"
description = "A simple tool for transforming Python docstrings by embedding results from Python function calls"
authors = ["Maddy Guthridge <hello@maddyguthridge.com>"]
license = "MIT"
readme = "README.md"

repository = "https://github.com/MaddyGuthridge/transdoc"
# documentation = "https://maddyguthridge.github.io/transdoc/"

keywords = ["documentation", "source", "transform", "parse", "pre-processor"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Topic :: Documentation",
    "Topic :: Software Development :: Documentation",
    "Topic :: Software Development :: Pre-processors",
    "Typing :: Typed",
]

include = ["py.typed"]

[tool.poetry.scripts]
transdoc = "transdoc.__main__:cli"

[tool.poetry.dependencies]
python = "^3.10"
libcst = "^1.2.0"
click = "^8.1.7"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.4.4,<9.0.0"
mypy = "^1.8.0"
flake8 = "^7.0.0"
Flake8-pyproject = "^1.2.3"
coverage = "^7.4.0"
autopep8 = "^2.0.4"
jestspectation = "^1.3.0"

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "return NotImplemented",
    "@overload",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
