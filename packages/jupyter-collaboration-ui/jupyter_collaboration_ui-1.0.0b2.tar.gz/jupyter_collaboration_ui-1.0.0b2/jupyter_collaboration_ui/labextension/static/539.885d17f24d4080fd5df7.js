"use strict";(self.webpackChunk_jupyter_collaboration_extension=self.webpackChunk_jupyter_collaboration_extension||[]).push([[539],{7539:(e,t,s)=>{s.r(t),s.d(t,{ICollaborativeDrive:()=>b,IGlobalAwareness:()=>C,NotebookCellServerExecutor:()=>_,WebSocketAwarenessProvider:()=>c,WebSocketProvider:()=>v,YDrive:()=>w,requestDocSession:()=>y});var o,r=s(4602),n=s(3721),i=s(6214),a=s(3560);!function(e){e[e.CHAT=125]="CHAT"}(o||(o={}));class c extends a.WebsocketProvider{constructor(e){super(e.url,e.roomID,e.awareness.doc,{awareness:e.awareness}),this._isDisposed=!1,this._awareness=e.awareness,this._user=e.user,this._user.ready.then((()=>this._onUserChanged(this._user))).catch((e=>console.error(e))),this._user.userChanged.connect(this._onUserChanged,this),this._messageStream=new r.Stream(this),this.messageHandlers[o.CHAT]=(e,t,s,o,r)=>{const i=n.t3(t),a=JSON.parse(i);this._messageStream.emit(a)}}get isDisposed(){return this._isDisposed}get messageStream(){return this._messageStream}dispose(){this._isDisposed||(this._user.userChanged.disconnect(this._onUserChanged,this),this._isDisposed=!0,this.destroy())}sendMessage(e){const t={type:"text",body:e},s=i.xv();i.zd(s,o.CHAT),i.Qj(s,JSON.stringify(t)),this.ws.send(i.Fo(s))}_onUserChanged(e){this._awareness.setLocalStateField("user",e.identity)}}var l=s(2607),d=s(4074),h=s(2465),u=s(6605);class _{constructor(e){var t;this._serverSettings=null!==(t=e.serverSettings)&&void 0!==t?t:h.ServerConnection.makeSettings()}async runCell({cell:e,notebook:t,notebookConfig:s,onCellExecuted:o,onCellExecutionScheduled:r,sessionContext:n,sessionDialogs:i,translator:a}){var c,_,p;const y=(a=null!=a?a:u.nullTranslator).load("jupyterlab");switch(e.model.type){case"markdown":e.rendered=!0,e.inputHidden=!1,o({cell:e,success:!0});break;case"code":if(n){if(n.isTerminating){await(0,l.showDialog)({title:y.__("Kernel Terminating"),body:y.__("The kernel for %1 appears to be terminating. You can not run any cell for now.",null===(c=n.session)||void 0===c?void 0:c.path),buttons:[l.Dialog.okButton()]});break}if(n.pendingInput)return await(0,l.showDialog)({title:y.__("Cell not executed due to pending input"),body:y.__("The cell has not been executed to avoid kernel deadlock as there is another pending input! Submit your pending input and try again."),buttons:[l.Dialog.okButton()]}),!1;if(n.hasNoKernel&&await n.startKernel()&&i&&await i.selectKernel(n),n.hasNoKernel)return e.model.sharedModel.transact((()=>{e.model.clearExecution()})),!0;const s=null===(p=null===(_=null==n?void 0:n.session)||void 0===_?void 0:_.kernel)||void 0===p?void 0:p.id,a=d.URLExt.join(this._serverSettings.baseUrl,`api/kernels/${s}/execute`),u=e.model.sharedModel.getId(),m=t.sharedModel.getState("document_id"),v={method:"POST",body:JSON.stringify({cell_id:u,document_id:m})};r({cell:e});let g=!1;try{g=(await h.ServerConnection.makeRequest(a,v,this._serverSettings)).ok}catch(t){if(o({cell:e,success:!1}),e.isDisposed)return!1;throw t}return o({cell:e,success:g}),!0}e.model.sharedModel.transact((()=>{e.model.clearExecution()}),!1)}return Promise.resolve(!0)}}const p="api/collaboration/session";async function y(e,t,s){const o=h.ServerConnection.makeSettings(),r=d.URLExt.join(o.baseUrl,p,encodeURIComponent(s)),n={method:"PUT",body:JSON.stringify({format:e,type:t})};let i;try{i=await h.ServerConnection.makeRequest(r,n,o)}catch(e){throw new h.ServerConnection.NetworkError(e)}let a=await i.text();if(a.length>0)try{a=JSON.parse(a)}catch(e){console.log("Not a JSON response body.",i)}if(!i.ok)throw new h.ServerConnection.ResponseError(i,a.message||a);return a}var m=s(7262);class v{constructor(e){this._onConnectionClosed=e=>{1003===e.code&&(console.error("Document provider closed:",e.reason),(0,l.showErrorMessage)(this._trans.__("Document session error"),e.reason,[l.Dialog.okButton()]),this._sharedModel.dispose())},this._onSync=e=>{e&&(this._yWebsocketProvider&&(this._yWebsocketProvider.off("sync",this._onSync),this._sharedModel.ydoc.getMap("state").set("document_id",this._yWebsocketProvider.roomname)),this._ready.resolve())},this._ready=new m.PromiseDelegate,this._isDisposed=!1,this._path=e.path,this._contentType=e.contentType,this._format=e.format,this._serverUrl=e.url,this._sharedModel=e.model,this._awareness=e.model.awareness,this._yWebsocketProvider=null,this._trans=e.translator;const t=e.user;t.ready.then((()=>{this._onUserChanged(t)})).catch((e=>console.error(e))),t.userChanged.connect(this._onUserChanged,this),this._connect().catch((e=>console.warn(e)))}get isDisposed(){return this._isDisposed}get ready(){return this._ready.promise}dispose(){var e,t,s;this.isDisposed||(this._isDisposed=!0,null===(e=this._yWebsocketProvider)||void 0===e||e.off("connection-close",this._onConnectionClosed),null===(t=this._yWebsocketProvider)||void 0===t||t.off("sync",this._onSync),null===(s=this._yWebsocketProvider)||void 0===s||s.destroy(),r.Signal.clearData(this))}async _connect(){const e=await y(this._format,this._contentType,this._path);this._yWebsocketProvider=new a.WebsocketProvider(this._serverUrl,`${e.format}:${e.type}:${e.fileId}`,this._sharedModel.ydoc,{disableBc:!0,params:{sessionId:e.sessionId},awareness:this._awareness}),this._yWebsocketProvider.on("sync",this._onSync),this._yWebsocketProvider.on("connection-close",this._onConnectionClosed)}_onUserChanged(e){this._awareness.setLocalStateField("user",e.identity)}}const g="true"===d.PageConfig.getOption("disableRTC");class w extends h.Drive{constructor(e,t,s){super({name:"RTC"}),this._onCreate=(e,t)=>{var s,o;if("string"==typeof e.format)try{const r=new v({url:d.URLExt.join(this.serverSettings.wsUrl,"api/collaboration/room"),path:e.path,format:e.format,contentType:e.contentType,model:t,user:this._user,translator:this._trans}),n=((null===(s=this._globalAwareness)||void 0===s?void 0:s.getLocalState())||{}).documents||[];n.includes(e.path)||(n.push(`${this.name}:${e.path}`),null===(o=this._globalAwareness)||void 0===o||o.setLocalStateField("documents",n));const i=`${e.format}:${e.contentType}:${e.path}`;this._providers.set(i,r),t.disposed.connect((()=>{var t,s;const o=this._providers.get(i);o&&(o.dispose(),this._providers.delete(i));const r=((null===(t=this._globalAwareness)||void 0===t?void 0:t.getLocalState())||{}).documents||[],n=r.indexOf(`${this.name}:${e.path}`);n>-1&&r.splice(n,1),null===(s=this._globalAwareness)||void 0===s||s.setLocalStateField("documents",r)}))}catch(t){console.error(`Failed to open websocket connection for ${e.path}.\n:${t}`)}},this._user=e,this._trans=t,this._globalAwareness=s,this._providers=new Map,this.sharedModelFactory=new f(this._onCreate)}dispose(){this.isDisposed||(this._providers.forEach((e=>e.dispose())),this._providers.clear(),super.dispose())}async get(e,t){if(t&&t.format&&t.type){const s=`${t.format}:${t.type}:${e}`,o=this._providers.get(s);if(o){const[s]=await Promise.all([super.get(e,{...t,content:!1}),o.ready]);return s}}return super.get(e,t)}async save(e,t={}){if(t.format&&t.type){const s=`${t.format}:${t.type}:${e}`;if(this._providers.get(s)){const s={type:t.type,format:t.format,content:!1};return this.get(e,s)}}return super.save(e,t)}}class f{constructor(e){this._onCreate=e,this.collaborative=!g,this._documentFactories=new Map}registerDocumentFactory(e,t){if(this._documentFactories.has(e))throw new Error(`The content type ${e} already exists`);this._documentFactories.set(e,t)}createNew(e){if("string"==typeof e.format){if(this.collaborative&&e.collaborative&&this._documentFactories.has(e.contentType)){const t=this._documentFactories.get(e.contentType)(e);return this._onCreate(e,t),t}}else console.warn(`Only defined format are supported; got ${e.format}.`)}}const b=new m.Token("@jupyter/collaboration-extension:ICollaborativeDrive"),C=new m.Token("@jupyter/collaboration:IGlobalAwareness")}}]);