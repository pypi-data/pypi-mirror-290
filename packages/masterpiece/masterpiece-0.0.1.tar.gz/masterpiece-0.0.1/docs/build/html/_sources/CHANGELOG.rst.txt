Changelog
=========

[0.0.1] - August 4, 2024
------------------------

### New Features and Improvements

- **Trademark** Cool (not) slogan: Masterpiece - Quite a piece of work
- **Plugin API:** Enhanced the plugin API with two classes: 'Plugin' and 'PlugMaster' with compatibility with Python
  versions 3.8 and later.
  recent version tested is 3.12. 
- **Meta-Class Automation:** Per-class bureaucracy automated using Python's meta-class concept.
- **Folder Structure:** Redesigned for future expansion.
- **Base Class:** Added new base class for MasterPiece applications in `base/application.py`.
- **Example Application:** Added `examples/myhome.py` to demonstrate the general structure of MasterPiece applications.
- **Startup Argument Parsing:** Added API for parsing startup arguments.
- **Serialization API:** Fully featured serialization implemented.
- **Documentation:** Added comprehensive docstrings to numerous methods and functions, aiming for fully documented professional Python code.
- **Type Annotations:** Added type annotations to numerous previously non-typed method arguments, moving towards a fully typed Python code
- **Bug fixes and improvements:**
    - Added encoding="utf-8" to all `open()` calls



[0.0.0] - May 31, 2024
----------------------

### Initial Release

- **Base Class Draft:** Initial version of the `MasterPiece` and `Composite` classes.
- **Python Packaging:** Python package infrastructure setup using `pyproject.toml`, installable via pip.
- **Documentation:**
  - Added LICENSE, README, and other standard files in .rst format.
  - Developer documentation autogenerated with Sphinx toolset.
- **Project Name:** Named the project 'MasterPieceâ„¢', with a note that 'M' currently stands for mission rather than masterpiece.
- **Miscellaneous:** Some unconventional use of the Python programming language.
