import{I as c}from"./index.CSQ2Iz6a.js";const r=async(a="")=>{let n=null;const o=await fetch(`${c}/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?n=t.detail:n="Server connection failed",null));if(n)throw n;return o},s=async(a="",n,o)=>{let t=null;const e=await fetch(`${c}/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({engine:n,enabled:o})}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).catch(i=>(console.log(i),"detail"in i?t=i.detail:t="Server connection failed",null));if(t)throw t;return e},h=async(a="")=>{let n=null;const o=await fetch(`${c}/openai/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?n=t.detail:n="Server connection failed",null));if(n)throw n;return o},p=async(a="",n,o)=>{let t=null;const e=await fetch(`${c}/openai/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({url:n,key:o})}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).catch(i=>(console.log(i),"detail"in i?t=i.detail:t="Server connection failed",null));if(t)throw t;return e},u=async(a="")=>{let n=null;const o=await fetch(`${c}/url`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?n=t.detail:n="Server connection failed",null));if(n)throw n;return o},d=async(a="",n={})=>{let o=null;const t=await fetch(`${c}/url/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({...n})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.log(e),"detail"in e?o=e.detail:o="Server connection failed",null));if(o)throw o;return t},f=async(a="")=>{let n=null;const o=await fetch(`${c}/size`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?n=t.detail:n="Server connection failed",null));if(n)throw n;return o.IMAGE_SIZE},j=async(a="",n)=>{let o=null;const t=await fetch(`${c}/size/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({size:n})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.log(e),"detail"in e?o=e.detail:o="Server connection failed",null));if(o)throw o;return t.IMAGE_SIZE},w=async(a="")=>{let n=null;const o=await fetch(`${c}/steps`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?n=t.detail:n="Server connection failed",null));if(n)throw n;return o.IMAGE_STEPS},y=async(a="",n)=>{let o=null;const t=await fetch(`${c}/steps/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({steps:n})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.log(e),"detail"in e?o=e.detail:o="Server connection failed",null));if(o)throw o;return t.IMAGE_STEPS},g=async(a="")=>{let n=null;const o=await fetch(`${c}/models`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?n=t.detail:n="Server connection failed",null));if(n)throw n;return o},S=async(a="")=>{let n=null;const o=await fetch(`${c}/models/default`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?n=t.detail:n="Server connection failed",null));if(n)throw n;return o.model},m=async(a="",n)=>{let o=null;const t=await fetch(`${c}/models/default/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({model:n})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.log(e),"detail"in e?o=e.detail:o="Server connection failed",null));if(o)throw o;return t.model},T=async(a="",n)=>{let o=null;const t=await fetch(`${c}/generations`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({prompt:n})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.log(e),"detail"in e?o=e.detail:o="Server connection failed",null));if(o)throw o;return t};export{u as a,h as b,f as c,w as d,g as e,S as f,r as g,s as h,p as i,m as j,j as k,y as l,T as m,d as u};
//# sourceMappingURL=index.TCCX3mLH.js.map
