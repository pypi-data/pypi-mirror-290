{"version":3,"file":"lib_index_js.1951ad147a2cfebb3df2.js","mappings":"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","sources":["webpack://ndp-jupyterlab-extension/./src/buttons.ts","webpack://ndp-jupyterlab-extension/./src/checkboxes.ts","webpack://ndp-jupyterlab-extension/./src/dropdowns.ts","webpack://ndp-jupyterlab-extension/./src/handler.ts","webpack://ndp-jupyterlab-extension/./src/index.ts","webpack://ndp-jupyterlab-extension/./src/widget.ts"],"sourcesContent":["// buttons.ts\nimport { NDPWidget } from './widget';\n\nexport function createButton(\n  text: string,\n  className: string,\n  onClickHandler: (event: Event) => void\n) {\n  const button = document.createElement('button');\n  button.textContent = text;\n  button.className = className;\n  button.addEventListener('click', onClickHandler);\n  return button;\n}\n\nexport function createFileManagerButton(widget: NDPWidget) {\n  return createButton(\n    'File Manager',\n    'ndp-button',\n    widget._onGoToFileManagerButtonClick.bind(widget)\n  );\n}\n\nexport function createGitExtensionButton(widget: NDPWidget) {\n  return createButton(\n    'GIT Extension',\n    'ndp-button',\n    widget._onGoToGitExtensionButtonClick.bind(widget)\n  );\n}\n\nexport function createDownloadButton(widget: NDPWidget) {\n  return createButton(\n    'Download All Resources',\n    'ndp-button',\n    widget._onButtonDownloadClick.bind(widget)\n  );\n}\n\nexport function createInstallButton(widget: NDPWidget) {\n  return createButton(\n    'Install requirements.txt',\n    'ndp-button',\n    widget._onButtonInstallClick.bind(widget)\n  );\n}\n\nexport function createGetWorkspacesDataButton(widget: NDPWidget) {\n  return createButton(\n    'Refresh',\n    'ndp-button',\n    widget._onButtonGetWorkspacesDataClick.bind(widget)\n  );\n}\n\nexport function createDownloadSelectedResourcesButton(widget: NDPWidget) {\n  return createButton(\n    'Download Selected Resources',\n    'ndp-button',\n    widget._onButtonDownloadSelectedResourcesClick.bind(widget)\n  );\n}\n","import { NDPWidget } from './widget';\n\ninterface Resource {\n  name: string;\n  url: string;\n}\n\nexport function populateCheckboxes(\n  widget: NDPWidget,\n  datasetResources: Array<Resource>\n) {\n  console.log(datasetResources);\n  // Clear any existing checkboxes\n  widget.checkboxContainer.innerHTML = '';\n\n  // datasetResources is list of dicts\n  datasetResources.forEach(resource => {\n    const checkboxWrapper = document.createElement('div');\n    checkboxWrapper.className = 'checkbox-wrapper';\n\n    const checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.id = resource.name;\n    checkbox.value = resource.name;\n\n    const label = document.createElement('label');\n    label.htmlFor = resource.name;\n    label.textContent = resource.name;\n\n    checkboxWrapper.appendChild(checkbox);\n    checkboxWrapper.appendChild(label);\n    widget.checkboxContainer.appendChild(checkboxWrapper);\n  });\n}\n\nfunction getSelectedResourceLink(\n  widget: NDPWidget,\n  datasetResources: Array<Resource>\n): Array<object> {\n  const selectedLinks: Array<object> = [];\n\n  // Iterate over all checkboxes in the container\n  const checkboxes = widget.checkboxContainer.querySelectorAll(\n    'input[type=\"checkbox\"]'\n  );\n  checkboxes.forEach(checkbox => {\n    const inputElement = checkbox as HTMLInputElement;\n    if (inputElement.checked) {\n      const resource = datasetResources.find(\n        res => res.name === inputElement.value\n      );\n      if (resource) {\n        let o: object = {resource.name: resource.url}\n        selectedLinks.push(o);\n      }\n    }\n  });\n\n  return selectedLinks;\n}\n\nexport function getSelectedResourcesLinks(\n  widget: NDPWidget\n): Array<Array<string>> {\n  const selectedDatasetName = widget.dropdownDatasets.value;\n  const selectedWorkspaceName = widget.dropdownWorkspaces.value;\n  const selectedWorkspace = widget.workspaces.find(\n    workspace => workspace.workspace_name === selectedWorkspaceName\n  );\n  const selectedDataset = selectedWorkspace?.datasets.find(\n    dataset => dataset.dataset_name === selectedDatasetName\n  );\n\n  if (selectedDataset) {\n    return getSelectedResourceLink(widget, selectedDataset.dataset_resources);\n  }\n  return [];\n}\n","import { NDPWidget } from './widget';\nimport { populateCheckboxes } from './checkboxes';\n\ninterface Resource {\n  name: string;\n  url: string;\n}\ninterface Dataset {\n  dataset_name: string;\n  dataset_resources: Array<Resource>;\n}\ninterface Workspace {\n  workspace_name: string;\n  datasets: [Dataset];\n}\n\nexport function createDropdownWorkspaces() {\n  const dropdownWorkspaces = document.createElement('select');\n  dropdownWorkspaces.id = 'dropdown-workspaces';\n  dropdownWorkspaces.className = 'ndp-dropdown';\n  dropdownWorkspaces.ariaPlaceholder = '1';\n  return dropdownWorkspaces;\n}\n\nexport function updateWorkspacesDropdown(widget: NDPWidget) {\n  widget.dropdownWorkspaces.innerHTML = '';\n  const sortedWorkspaces = widget.workspaces.sort((a, b) =>\n    a.workspace_name.localeCompare(b.workspace_name)\n  );\n\n  sortedWorkspaces.forEach((workspace: Workspace) => {\n    const option = document.createElement('option');\n    option.value = workspace.workspace_name;\n    option.textContent = workspace.workspace_name;\n    widget.dropdownWorkspaces.appendChild(option);\n    // Populate the second dropdown if the selected workspace is found\n    updateDatasetsDropdown(widget);\n  });\n}\n\nexport function createDropdownDatasets() {\n  const dropdownDatasets = document.createElement('select');\n  dropdownDatasets.className = 'ndp-dropdown';\n  dropdownDatasets.id = 'dropdown-datasets';\n  return dropdownDatasets;\n}\n\nexport function updateDatasetsDropdown(widget: NDPWidget) {\n  // Get the selected option value\n  const selectedWorkspaceName = widget.dropdownWorkspaces.value;\n  // Find the selected workspace\n  const selectedWorkspace = widget.workspaces.find(\n    workspace => workspace.workspace_name === selectedWorkspaceName\n  );\n  if (selectedWorkspace) {\n    // Clear the second dropdown options\n    widget.dropdownDatasets.innerHTML = '';\n    // Sort alphabetically\n    const sortedDatasets = selectedWorkspace.datasets.sort((a, b) =>\n      a.dataset_name.localeCompare(b.dataset_name)\n    );\n    sortedDatasets.forEach((dataset: Dataset) => {\n      const option = document.createElement('option');\n      option.value = dataset.dataset_name;\n      option.textContent = dataset.dataset_name;\n      widget.dropdownDatasets.appendChild(option);\n    });\n\n    // Populate checkboxes with the first dataset's resources\n    if (sortedDatasets.length > 0) {\n      populateCheckboxes(widget, sortedDatasets[0].dataset_resources);\n    }\n    // if no datasets selected, no checkboxes should be shown\n    else {\n      widget.checkboxContainer.innerHTML = '';\n    }\n  }\n}\n","import { URLExt } from '@jupyterlab/coreutils';\n\nimport { ServerConnection } from '@jupyterlab/services';\n\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function requestAPI<T>(\n  endPoint = '',\n  init: RequestInit = {}\n): Promise<T> {\n  // Make request to Jupyter API\n  const settings = ServerConnection.makeSettings();\n  const requestUrl = URLExt.join(\n    settings.baseUrl,\n    'ndp-jupyterlab-extension', // API Namespace\n    endPoint\n  );\n\n  let response: Response;\n  try {\n    response = await ServerConnection.makeRequest(requestUrl, init, settings);\n  } catch (error) {\n    throw new ServerConnection.NetworkError(error as any);\n  }\n\n  let data: any = await response.text();\n\n  if (data.length > 0) {\n    try {\n      data = JSON.parse(data);\n    } catch (error) {\n      console.log('Not a JSON response body.', response);\n    }\n  }\n\n  if (!response.ok) {\n    throw new ServerConnection.ResponseError(response, data.message || data);\n  }\n\n  return data;\n}\n","import {\n  ILabShell,\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\n\nimport { IDefaultFileBrowser } from '@jupyterlab/filebrowser';\nimport { NDPWidget } from './widget';\n\n/**\n * Initialization data for the main menu example.\n */\nconst extension: JupyterFrontEndPlugin<void> = {\n  id: '@jupyterlab-examples/main-menu:plugin',\n  description: 'Minimal JupyterLab example adding a menu.',\n  autoStart: true,\n  requires: [IDefaultFileBrowser, ILabShell],\n  activate: (\n    app: JupyterFrontEnd,\n    defaultBrowser: IDefaultFileBrowser,\n    labShell: ILabShell\n  ) => {\n    const { commands } = app;\n    const widget = new NDPWidget(defaultBrowser, commands);\n    labShell.add(widget, 'left');\n    app.restored.then(() => {\n      labShell.activateById(widget.id);\n    });\n  }\n};\n\nexport default extension;\n","// widget.ts\nimport { Widget } from '@lumino/widgets';\nimport { IDefaultFileBrowser } from '@jupyterlab/filebrowser';\nimport ndp_map_path from '../style/ndp-landing-image.png';\nimport ndp_letters_path from '../style/ndp_logo.png';\nimport { requestAPI } from './handler';\nimport { JupyterFrontEnd } from '@jupyterlab/application';\nimport {\n  createDropdownWorkspaces,\n  createDropdownDatasets,\n  updateWorkspacesDropdown,\n  updateDatasetsDropdown\n} from './dropdowns';\nimport {\n  createFileManagerButton,\n  createGitExtensionButton,\n  createDownloadButton,\n  createInstallButton,\n  createGetWorkspacesDataButton,\n  createDownloadSelectedResourcesButton\n} from './buttons';\nimport { getSelectedResourcesLinks, populateCheckboxes } from './checkboxes';\n// import { createCheckboxes } from './checkboxes';\n\ninterface Resource {\n  name: string;\n  url: string;\n}\ninterface Dataset {\n  dataset_name: string;\n  dataset_resources: Array<Resource>;\n}\ninterface Workspace {\n  workspace_name: string;\n  datasets: [Dataset];\n}\n\nexport class NDPWidget extends Widget {\n  private spinner: HTMLElement;\n  public dropdownWorkspaces: HTMLSelectElement;\n  public dropdownDatasets: HTMLSelectElement;\n  private fileBrowser: IDefaultFileBrowser;\n  private pathDisplay: HTMLDivElement;\n  private spinnerContainer: HTMLDivElement;\n  private pathDisplayTitle;\n  private pathDisplayContainer: HTMLDivElement;\n  public workspaces: Workspace[] = [];\n  checkboxContainer: HTMLDivElement;\n\n  constructor(\n    defaultBrowser: IDefaultFileBrowser,\n    private commands: JupyterFrontEnd['commands']\n  ) {\n    super();\n    this.fileBrowser = defaultBrowser;\n\n    this.addClass('jp-example-view');\n    this.id = 'ndp-widget';\n    this.title.label = 'NDP';\n    this.title.closable = true;\n\n    // Create an image element for the map\n    const ndpMapImg = document.createElement('img');\n    ndpMapImg.src = ndp_map_path;\n    ndpMapImg.className = 'ndp-logo-map';\n\n    // Create an image element for the NDP letters\n    const ndpLettersImg = document.createElement('img');\n    ndpLettersImg.src = ndp_letters_path;\n    ndpLettersImg.className = 'ndp-logo';\n\n    // Create an anchor element\n    const ndpLink = document.createElement('a');\n    ndpLink.href = 'https://ndp-test.sdsc.edu';\n    ndpLink.target = '_blank'; // to open the link in a new tab\n    ndpLink.appendChild(ndpMapImg);\n    ndpLink.appendChild(ndpLettersImg);\n\n    // Create a Show Path button element\n    defaultBrowser.model.pathChanged.connect((sender, args) => {\n      const currentPath = this.fileBrowser.model.path;\n      this.updatePathDisplay(currentPath);\n    });\n\n    // Use imported functions to create dropdowns\n    this.dropdownWorkspaces = createDropdownWorkspaces();\n    this.dropdownDatasets = createDropdownDatasets();\n\n    // Create a spinner element\n    this.spinnerContainer = document.createElement('div');\n    this.spinner = document.createElement('div');\n    this.spinnerContainer.className = 'spinner-container';\n    this.spinner.className = 'spinner';\n    this.spinner.style.display = 'none'; // Hide spinner initially\n    this.pathDisplayContainer = document.createElement('div');\n    this.pathDisplayContainer.className = 'path-display-container';\n    this.pathDisplayTitle = document.createElement('div');\n    this.pathDisplayTitle.className = 'path-display-title';\n    this.pathDisplayTitle.textContent = 'Current Folder:';\n    this.pathDisplay = document.createElement('div');\n    this.pathDisplay.className = 'path-display-path';\n    this.spinnerContainer.appendChild(this.spinner);\n    this.pathDisplayContainer.addEventListener(\n      'click',\n      this._onGoToFileManagerButtonClick.bind(this)\n    );\n\n    // Display the current path\n    this.updatePathDisplay();\n\n    // Create a div to center the button and spinner\n    const container = document.createElement('div');\n    container.className = 'ndp-button-container';\n\n    // Adding headers\n    const headerUtilities = document.createElement('div');\n    headerUtilities.textContent = 'Utilities';\n    headerUtilities.className = 'headers';\n    headerUtilities.style.paddingTop = '0px';\n    const headerActions = document.createElement('div');\n    headerActions.textContent = 'Actions for Current Folder';\n    headerActions.className = 'headers';\n    const headerWorkspace = document.createElement('div');\n    headerWorkspace.textContent = 'My Workspaces';\n    headerWorkspace.className = 'headers';\n    const headerDatasets = document.createElement('div');\n    headerDatasets.textContent = 'Datasets';\n    headerDatasets.className = 'headers';\n    const headerCheckboxes = document.createElement('div');\n    headerCheckboxes.textContent = 'Dataset Resources';\n    headerCheckboxes.className = 'headers';\n\n    container.appendChild(headerUtilities);\n    container.appendChild(createFileManagerButton(this));\n    container.appendChild(createGitExtensionButton(this));\n    container.appendChild(createInstallButton(this));\n    container.appendChild(headerWorkspace);\n    container.appendChild(this.dropdownWorkspaces);\n    container.appendChild(createGetWorkspacesDataButton(this));\n    container.appendChild(headerDatasets);\n    container.appendChild(this.dropdownDatasets);\n    container.appendChild(createDownloadButton(this));\n\n    // Create a div for the checkboxes and append it to the container\n    this.checkboxContainer = document.createElement('div');\n    this.checkboxContainer.className = 'checkbox-container';\n\n    container.appendChild(headerCheckboxes);\n    container.appendChild(this.checkboxContainer);\n    container.appendChild(createDownloadSelectedResourcesButton(this));\n\n    // Append the elements to the widget's DOM node\n    this.node.appendChild(ndpLink);\n    this.node.appendChild(container);\n    this.node.appendChild(this.spinnerContainer);\n    this.pathDisplayContainer.appendChild(this.pathDisplayTitle);\n    this.pathDisplayContainer.appendChild(this.pathDisplay);\n    this.node.appendChild(this.pathDisplayContainer);\n\n    this._getWorkspacesData();\n\n    // Add event listener to the namespaces dropdown\n    this.dropdownWorkspaces.addEventListener('change', () => {\n      updateDatasetsDropdown(this);\n    });\n\n    // Add event listener to the datasets dropdown\n    this.dropdownDatasets.addEventListener('change', () => {\n      const selectedDatasetName = this.dropdownDatasets.value;\n      const selectedWorkspaceName = this.dropdownWorkspaces.value;\n      const selectedWorkspace = this.workspaces.find(\n        workspace => workspace.workspace_name === selectedWorkspaceName\n      );\n      const selectedDataset = selectedWorkspace?.datasets.find(\n        dataset => dataset.dataset_name === selectedDatasetName\n      );\n      // if dataset is selected, update resouces checkboxes\n      if (selectedDataset) {\n        console.log('Selected Dataset');\n        populateCheckboxes(this, selectedDataset.dataset_resources);\n      }\n    });\n  }\n  // end of constructor\n  _onGoToFileManagerButtonClick(event: Event): void {\n    this.commands.execute('filebrowser:activate');\n  }\n\n  _onGoToGitExtensionButtonClick(event: Event): void {\n    this.commands.execute('git:ui');\n  }\n\n  async _onButtonDownloadClick(event: Event): Promise<void> {\n    this.spinner.style.display = 'block'; // Show spinner\n    // Get the current path from the file manager\n    const currentPath = this.fileBrowser.model.path;\n\n    // Get value from datasets dropdown\n    const selectedDataset = this.dropdownDatasets.value;\n\n    console.log('Making request to JupyterLab API: Download');\n    try {\n      const data = await requestAPI<any>('download_datasets', {\n        method: 'POST',\n        body: JSON.stringify({ path: currentPath, dataset: selectedDataset })\n      });\n      console.log(data);\n    } catch (reason) {\n      console.error(`Server Extension Error\\n${reason}`);\n    } finally {\n      this.spinner.style.display = 'none'; // Hide spinner\n    }\n  }\n\n  async _onButtonInstallClick(event: Event): Promise<void> {\n    this.spinner.style.display = 'block'; // Show spinner\n    // Get the current path from the file manager\n    const currentPath = this.fileBrowser.model.path;\n    console.log('Making request to JupyterLab API: Install');\n    try {\n      const data = await requestAPI<any>('install_requirements', {\n        method: 'POST',\n        body: JSON.stringify({ path: currentPath })\n      });\n      console.log(data);\n    } catch (reason) {\n      console.error(`Server Extension Error\\n${reason}`);\n    } finally {\n      this.spinner.style.display = 'none'; // Hide spinner\n    }\n  }\n\n  private async _getWorkspacesData(): Promise<void> {\n    console.log('Making request to JupyterLab API: Workspaces');\n    try {\n      this.workspaces = await requestAPI<Workspace[]>('get_workspaces_data', {\n        method: 'GET'\n      });\n      console.log(this.workspaces);\n\n      updateWorkspacesDropdown(this);\n    } catch (error) {\n      console.error('Error fetching workspaces:', error);\n    }\n  }\n\n  async _onButtonGetWorkspacesDataClick(event: Event): Promise<void> {\n    this.spinner.style.display = 'block'; // Show spinner\n    // Get the current path from the file manager\n    try {\n      this._getWorkspacesData();\n    } catch (reason) {\n      console.error(`Server Extension Error\\n${reason}`);\n    } finally {\n      this.spinner.style.display = 'none'; // Hide spinner\n    }\n  }\n\n  async _onButtonDownloadSelectedResourcesClick(event: Event): Promise<void> {\n    const resources = getSelectedResourcesLinks(this);\n    console.log();\n    this.spinner.style.display = 'block'; // Show spinner\n    // Get the current path from the file manager\n    const currentPath = this.fileBrowser.model.path;\n\n    // Get value from datasets dropdown\n    const selectedDataset = this.dropdownDatasets.value;\n\n    console.log('Making request to JupyterLab API: Download');\n    try {\n      const data = await requestAPI<any>('download_datasets', {\n        method: 'POST',\n        body: JSON.stringify({\n          path: currentPath,\n          dataset: selectedDataset,\n          resources: resources\n        })\n      });\n      console.log(data);\n    } catch (reason) {\n      console.error(`Server Extension Error\\n${reason}`);\n    } finally {\n      this.spinner.style.display = 'none'; // Hide spinner\n    }\n  }\n  private updatePathDisplay(path?: string): void {\n    const currentPath = path || this.fileBrowser.model.path;\n    if (currentPath === '') {\n      this.pathDisplay.textContent = 'root/';\n    } else {\n      this.pathDisplay.textContent = `root/${currentPath}`;\n    }\n  }\n}\n"],"names":[],"sourceRoot":""}