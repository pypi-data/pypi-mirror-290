{"version":3,"file":"lib_index_js.d55699cc192716d3b8eb.js","mappings":";;;;;;;;;;;;;;;;;;AAIiC;AAE6B;AACzB;AAErC;;GAEG;AACH,MAAM,SAAS,GAAgC;IAC7C,EAAE,EAAE,uCAAuC;IAC3C,WAAW,EAAE,2CAA2C;IACxD,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,CAAC,wEAAmB,EAAE,8DAAS,CAAC;IAC1C,QAAQ,EAAE,CACR,GAAoB,EACpB,cAAmC,EACnC,QAAmB,EACnB,EAAE;QACF,MAAM,EAAE,QAAQ,EAAE,GAAG,GAAG,CAAC;QACzB,MAAM,MAAM,GAAG,IAAI,8CAAS,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;QACvD,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAC7B,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE;YACrB,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;CACF,CAAC;AAEF,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;;;;;;AC/B0B;AAEO;AACL;AAMrD,wDAAwD;AAExD,wBAAwB;AACxB,4BAA4B;AAC5B,wBAAwB;AACxB,IAAI;AAEG,MAAM,SAAU,SAAQ,mDAAM;IASnC,wCAAwC;IAExC,YACE,cAAmC,EAC3B,QAAqC;QAE7C,KAAK,EAAE,CAAC;QAFA,aAAQ,GAAR,QAAQ,CAA6B;QAG7C,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC;QAElC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;QACjC,IAAI,CAAC,EAAE,GAAG,YAAY,CAAC;QACvB,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;QAE3B,4BAA4B;QAC5B,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACtD,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1D,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACtD,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACjD,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC3D,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAEzD,sBAAsB;QACtB,MAAM,QAAQ,GAAG,IAAI,qDAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;QAEnC,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC3C,UAAU,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;QAEhC,MAAM,cAAc,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QACnD,cAAc,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC;QAExC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAC/B,QAAQ,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QACnC,QAAQ,CAAC,EAAE,GAAG,WAAW,CAAC;QAC1B,QAAQ,CAAC,MAAM,CAAC,YAAY,GAAG,CAAC,CAAC;QAEjC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IAEO,gBAAgB;QACtB,MAAM,aAAa,GAAG,IAAI,mDAAM,EAAE,CAAC;QACnC,aAAa,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;QAE1C,sCAAsC;QACtC,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAChD,SAAS,CAAC,GAAG,GAAG,yDAAY,CAAC;QAC7B,SAAS,CAAC,SAAS,GAAG,cAAc,CAAC;QAErC,8CAA8C;QAC9C,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACpD,aAAa,CAAC,GAAG,GAAG,gDAAgB,CAAC;QACrC,aAAa,CAAC,SAAS,GAAG,UAAU,CAAC;QACrC,2BAA2B;QAC3B,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC5C,OAAO,CAAC,IAAI,GAAG,2BAA2B,CAAC;QAC3C,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,gCAAgC;QAC3D,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAC/B,OAAO,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QAEnC,oDAAoD;QACpD,MAAM,iBAAiB,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC3D,iBAAiB,CAAC,WAAW,GAAG,cAAc,CAAC;QAC/C,iBAAiB,CAAC,SAAS,GAAG,YAAY,CAAC;QAC3C,iBAAiB,CAAC,gBAAgB,CAChC,OAAO,EACP,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,IAAI,CAAC,CAC9C,CAAC;QAEF,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC3D,IAAI,CAAC,kBAAkB,CAAC,EAAE,GAAG,qBAAqB,CAAC;QACnD,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,cAAc,CAAC,CAAC,kBAAkB;QAEtE,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,CAAC,gBAAgB,CAAC,EAAE,GAAG,mBAAmB,CAAC;QAC/C,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,cAAc,CAAC,CAAC,kBAAkB;QAEpE,iCAAiC;QACjC,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,mBAAmB,CAAC;QACtD,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,yBAAyB;QAC9D,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,wBAAwB,CAAC;QAC/D,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,oBAAoB,CAAC;QACvD,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,iBAAiB,CAAC;QACtD,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,mBAAmB,CAAC;QACjD,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CACxC,OAAO,EACP,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,IAAI,CAAC,CAC9C,CAAC;QAEF,2BAA2B;QAC3B,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,gDAAgD;QAChD,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAChD,SAAS,CAAC,SAAS,GAAG,sBAAsB,CAAC;QAC7C,SAAS,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;QACzC,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,iBAAiB;QACtE,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC/C,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,iBAAiB;QACtE,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAE7C,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC7D,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAExD,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACxC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAC1C,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACtD,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAE1D,OAAO,aAAa,CAAC;IACvB,CAAC;IAEO,oBAAoB;QAC1B,MAAM,iBAAiB,GAAG,IAAI,mDAAM,EAAE,CAAC;QACvC,iBAAiB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;QAC9C,iBAAiB,CAAC,IAAI,CAAC,WAAW,GAAG,6BAA6B,CAAC;QACnE,OAAO,iBAAiB,CAAC;IAC3B,CAAC;IAED;;OAEG;IACK,6BAA6B,CAAC,KAAY;QAChD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;IAChD,CAAC;IAED;;OAEG;IACK,iBAAiB,CAAC,IAAa;QACrC,MAAM,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC;QACxD,IAAI,WAAW,KAAK,EAAE,EAAE;YACtB,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,OAAO,CAAC;SACxC;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,QAAQ,WAAW,EAAE,CAAC;SACtD;IACH,CAAC;CACF;AAED,sCAAsC;AACtC,MAAM,SAAS,GAAgC;IAC7C,EAAE,EAAE,eAAe;IACnB,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,CAAC,GAAoB,EAAE,OAA4B,EAAE,EAAE;QAC/D,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACvC,MAAM,MAAM,GAAG,IAAI,SAAS,CAAC,OAAO,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;QACpD,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IAChD,CAAC;CACF,CAAC;AAEF,iEAAe,SAAS,EAAC","sources":["webpack://ndp-jupyterlab-extension/./src/index.ts","webpack://ndp-jupyterlab-extension/./src/widget.ts"],"sourcesContent":["import {\n  ILabShell,\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\n\nimport { IDefaultFileBrowser } from '@jupyterlab/filebrowser';\nimport { NDPWidget } from './widget';\n\n/**\n * Initialization data for the main menu example.\n */\nconst extension: JupyterFrontEndPlugin<void> = {\n  id: '@jupyterlab-examples/main-menu:plugin',\n  description: 'Minimal JupyterLab example adding a menu.',\n  autoStart: true,\n  requires: [IDefaultFileBrowser, ILabShell],\n  activate: (\n    app: JupyterFrontEnd,\n    defaultBrowser: IDefaultFileBrowser,\n    labShell: ILabShell\n  ) => {\n    const { commands } = app;\n    const widget = new NDPWidget(defaultBrowser, commands);\n    labShell.add(widget, 'left');\n    app.restored.then(() => {\n      labShell.activateById(widget.id);\n    });\n  }\n};\n\nexport default extension;\n","import { Widget, TabPanel } from '@lumino/widgets';\nimport { IDefaultFileBrowser } from '@jupyterlab/filebrowser';\nimport ndp_map_path from '../style/ndp-landing-image.png';\nimport ndp_letters_path from '../style/ndp_logo.png';\n// import { requestAPI } from './handler';\nimport {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\n// import '../styles/styles.css'; // Import the CSS file\n\n// interface Workspace {\n//   workspace_name: string;\n//   datasets: string[];\n// }\n\nexport class NDPWidget extends Widget {\n  private spinner: HTMLElement;\n  private dropdownWorkspaces: HTMLSelectElement;\n  private dropdownDatasets: HTMLSelectElement;\n  private fileBrowser: IDefaultFileBrowser;\n  private pathDisplay: HTMLDivElement;\n  private spinnerContainer: HTMLDivElement;\n  private pathDisplayTitle: HTMLDivElement;\n  private pathDisplayContainer: HTMLDivElement;\n  // private workspaces: Workspace[] = [];\n\n  constructor(\n    defaultBrowser: IDefaultFileBrowser,\n    private commands: JupyterFrontEnd['commands']\n  ) {\n    super();\n    this.fileBrowser = defaultBrowser;\n\n    this.addClass('jp-example-view');\n    this.id = 'ndp-widget';\n    this.title.label = 'NDP';\n    this.title.closable = true;\n\n    // Initialize the properties\n    this.spinnerContainer = document.createElement('div');\n    this.pathDisplayContainer = document.createElement('div');\n    this.pathDisplayTitle = document.createElement('div');\n    this.pathDisplay = document.createElement('div');\n    this.spinner = document.createElement('div');\n    this.dropdownWorkspaces = document.createElement('select');\n    this.dropdownDatasets = document.createElement('select');\n\n    // Create the TabPanel\n    const tabPanel = new TabPanel();\n    tabPanel.addClass('ndp-tab-panel');\n\n    const homeWidget = this.createHomeWidget();\n    homeWidget.title.label = 'Home';\n\n    const settingsWidget = this.createSettingsWidget();\n    settingsWidget.title.label = 'Settings';\n\n    tabPanel.addWidget(homeWidget);\n    tabPanel.addWidget(settingsWidget);\n    tabPanel.id = 'tab-panel';\n    tabPanel.tabBar.currentIndex = 1;\n\n    this.node.appendChild(tabPanel.node);\n  }\n\n  private createHomeWidget(): Widget {\n    const homeContainer = new Widget();\n    homeContainer.addClass('ndp-tab-content');\n\n    // Create an image element for the map\n    const ndpMapImg = document.createElement('img');\n    ndpMapImg.src = ndp_map_path;\n    ndpMapImg.className = 'ndp-logo-map';\n\n    // Create an image element for the NDP letters\n    const ndpLettersImg = document.createElement('img');\n    ndpLettersImg.src = ndp_letters_path;\n    ndpLettersImg.className = 'ndp-logo';\n    // Create an anchor element\n    const ndpLink = document.createElement('a');\n    ndpLink.href = 'https://ndp-test.sdsc.edu';\n    ndpLink.target = '_blank'; // to open the link in a new tab\n    ndpLink.appendChild(ndpMapImg);\n    ndpLink.appendChild(ndpLettersImg);\n\n    // Create a button element to go to the file manager\n    const buttonFileManager = document.createElement('button');\n    buttonFileManager.textContent = 'File Manager';\n    buttonFileManager.className = 'ndp-button';\n    buttonFileManager.addEventListener(\n      'click',\n      this._onGoToFileManagerButtonClick.bind(this)\n    );\n\n    this.dropdownWorkspaces = document.createElement('select');\n    this.dropdownWorkspaces.id = 'dropdown-workspaces';\n    this.dropdownWorkspaces.className = 'ndp-dropdown'; // Apply CSS class\n\n    this.dropdownDatasets = document.createElement('select');\n    this.dropdownDatasets.id = 'dropdown-datasets';\n    this.dropdownDatasets.className = 'ndp-dropdown'; // Apply CSS class\n\n    // Initialize the spinner element\n    this.spinner = document.createElement('div');\n    this.spinnerContainer.className = 'spinner-container';\n    this.spinner.className = 'spinner';\n    this.spinner.style.display = 'none'; // Hide spinner initially\n    this.pathDisplayContainer.className = 'path-display-container';\n    this.pathDisplayTitle.className = 'path-display-title';\n    this.pathDisplayTitle.textContent = 'Current Folder:';\n    this.pathDisplay.className = 'path-display-path';\n    this.spinnerContainer.appendChild(this.spinner);\n    this.pathDisplayContainer.addEventListener(\n      'click',\n      this._onGoToFileManagerButtonClick.bind(this)\n    );\n\n    // Display the current path\n    this.updatePathDisplay();\n\n    // Create a div to center the button and spinner\n    const container = document.createElement('div');\n    container.className = 'ndp-button-container';\n    container.appendChild(buttonFileManager);\n    container.appendChild(document.createElement('br')); // Add break line\n    container.appendChild(this.dropdownWorkspaces);\n    container.appendChild(document.createElement('br')); // Add break line\n    container.appendChild(this.dropdownDatasets);\n\n    this.pathDisplayContainer.appendChild(this.pathDisplayTitle);\n    this.pathDisplayContainer.appendChild(this.pathDisplay);\n\n    homeContainer.node.appendChild(ndpLink);\n    homeContainer.node.appendChild(container);\n    homeContainer.node.appendChild(this.spinnerContainer);\n    homeContainer.node.appendChild(this.pathDisplayContainer);\n\n    return homeContainer;\n  }\n\n  private createSettingsWidget(): Widget {\n    const settingsContainer = new Widget();\n    settingsContainer.addClass('ndp-tab-content');\n    settingsContainer.node.textContent = 'Settings content goes here.';\n    return settingsContainer;\n  }\n\n  /**\n   * Callback on click on the go to file manager button\n   */\n  private _onGoToFileManagerButtonClick(event: Event): void {\n    this.commands.execute('filebrowser:activate');\n  }\n\n  /**\n   * Update the path display element\n   */\n  private updatePathDisplay(path?: string): void {\n    const currentPath = path || this.fileBrowser.model.path;\n    if (currentPath === '') {\n      this.pathDisplay.textContent = 'root/';\n    } else {\n      this.pathDisplay.textContent = `root/${currentPath}`;\n    }\n  }\n}\n\n// Register the plugin with JupyterLab\nconst extension: JupyterFrontEndPlugin<void> = {\n  id: 'ndp-extension',\n  autoStart: true,\n  activate: (app: JupyterFrontEnd, browser: IDefaultFileBrowser) => {\n    console.log('NDP extension activated');\n    const widget = new NDPWidget(browser, app.commands);\n    app.shell.add(widget, 'left', { rank: 1000 });\n  }\n};\n\nexport default extension;\n"],"names":[],"sourceRoot":""}