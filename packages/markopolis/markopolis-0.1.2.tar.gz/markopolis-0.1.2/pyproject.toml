[tool.poetry]
name = "markopolis"
version = "0.1.2"
description = "Markdown Programmable interface"
authors = ["Rishikanth Chandrasekaran <r3chandr@ucsd.edu>"]
readme = "README.md"
license = "MIT"

[tool.poetry.dependencies]
python = "^3.12"
pyyaml = "^6.0.1"
markdown = "^3.6"
loguru = "^0.7.2"
fire = "^0.6.0"
pydantic = "^2.8.2"
pygments = "^2.18.0"
regex = "^2024.7.24"
dynaconf = "^3.2.6"
python-markdown-math = "^0.8"
requests = "^2.32.3"
tqdm = "^4.66.5"
jinja2 = "^3.1.4"
fastapi = { extras = ["standard"], version = "^0.112.0" }

[tool.poetry.group.dev.dependencies]
basedpyright = "*"
ruff = "*"
pre-commit = "*"
pytest = "*"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.pyright]
venvPath = "/Users/rishi/miniconda3/envs"
venv = "markopolis"
useLibraryCodeForTypes = true
typeCheckingMode = "standard"
reportUnusedImport = "warning"
reportUnusedVariable = "warning"
reportDuplicateImport = "error"
reportPrivateUsage = "warning"
reportDeprecated = "warning"
reportInconsistentConstructor = "error"
reportMissingSuperCall = "error"
reportUninitializedInstanceVariable = "error"
reportUnnecessaryCast = "warning"
reportUnnecessaryComparison = "warning"
reportImplicitStringConcatenation = "warning"
diagnosticMode = "openFilesOnly"


[tool.poetry.scripts]
consume = "markopolis.scripts.consume:consume"
markopolis = "markopolis.fastapp:main"
