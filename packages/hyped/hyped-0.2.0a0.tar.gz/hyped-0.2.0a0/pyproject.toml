[project]
name = "hyped"
dynamic = ["version"]
description = "TODO"
readme = "README.md"
classifiers = [
    "License :: Freely Distributable",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.11",
]
authors = [
    {name = "open-hyped"},
]
requires-python = ">=3.10"
license = {text = "Apache 2.0"}
dependencies = [
    "datasets>=2.16.1",
    "fsspec<=2023.9.2",
    "torch>=2.2.1",
    "transformers>=4.36.2",
    "networkx>=3.1",
    "matplotlib>=3.8.2",
    "orjson>=3.9.4",
    "pydantic>=2.6.4",
    "json_repair>=0.17.0",
    "nest-asyncio>=1.6.0",
]

[project.optional-dependencies]
linting = ["pre-commit"]
tests = ["pytest", "pytest-cov", "pytest-asyncio"]
docs = ["sphinx", "sphinx_rtd_theme"]
cas = ["dkpro-cassis>=0.8.0"]
llm = ["openai>=1.23.6"]

[build-system]
requires = ["setuptools >= 61.0.0", "setuptools_scm>=8.0.0"]
build-backend = "setuptools.build_meta"

[tool.coverage.run]
concurrency = ["multiprocessing"]
parallel = true
sigterm = true

[tool.coverage.report]
ignore_errors = true
omit = ["tests/*", "src/hyped/__version__.py"]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",

    # Don't complain about overloaded functions
    "@(typing\\.)?overload",
    "pragma: not covered"
]

[tool.setuptools_scm]
version_file = "src/hyped/__version__.py"

[tool.black]
target-version = ["py311"]
line-length = 79
docstring-style = "google"

[tool.isort]
profile = "black"
line_length = 79
skip = ["docs/source/conf.py"]

[tool.ruff]
line-length = 79
# check docstrings
select = ["D"]
ignore = ["E741"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
# Don't check docstrings of `tests` and `docs`
"tests/**" = ["D"]
"docs/**" = ["D"]
