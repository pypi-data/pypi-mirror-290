aag 210 5 59 1 146
2
4
6
8
10
12 14
16 18
20 22
24 26
28 30
32 34
36 38
40 42
44 46
48 50
52 54
56 58
60 62
64 66
68 70
72 74
76 78
80 82
84 86
88 90
92 94
96 98
100 102
104 106
108 110
112 114
116 118
120 122
124 126
128 1
14 287
18 291
42 295
46 299
50 303
62 309
70 313
82 317
90 321
98 327
102 331
22 337
26 341
30 349
34 353
38 357
54 361
58 367
66 371
74 377
78 381
86 385
94 389
106 395
110 399
114 403
118 409
122 415
126 421
130
130 128 280
132 10 5
134 132 3
136 3 77
138 135 137
140 5 139
142 6 5
144 142 116
146 143 26
148 146 68
150 145 149
152 4 9
154 152 97
156 2 11
158 156 61
160 4 11
162 160 61
164 6 117
166 4 7
168 166 120
170 167 114
172 170 48
174 169 173
176 152 120
178 153 22
180 178 16
182 177 181
184 11 66
186 185 9
188 186 97
190 10 125
192 7 9
194 192 11
196 84 195
198 197 45
200 6 8
202 6 10
204 8 10
206 201 203
208 206 205
210 195 209
212 100 195
214 40 7
216 9 11
218 214 216
220 84 3
222 220 5
224 223 13
226 3 5
228 2 4
230 227 229
232 88 231
234 80 227
236 225 233
238 235 30
240 236 238
242 165 94
244 175 183
246 189 191
248 58 199
250 211 213
252 219 110
254 242 244
256 246 248
258 250 252
260 254 256
262 258 241
264 260 262
266 141 151
268 155 38
270 159 54
272 163 34
274 266 268
276 270 272
278 274 276
280 278 265
282 129 0
284 128 225
286 283 285
288 128 183
290 283 289
292 128 100
294 283 293
296 128 199
298 283 297
300 128 175
302 283 301
304 11 61
306 128 305
308 283 307
310 128 151
312 283 311
314 128 88
316 283 315
318 128 226
320 283 319
322 9 97
324 128 323
326 283 325
328 128 195
330 283 329
332 129 1
334 128 178
336 333 335
338 128 146
340 333 339
342 233 235
344 342 30
346 128 344
348 333 347
350 128 272
352 333 351
354 128 268
356 333 355
358 128 270
360 333 359
362 191 58
364 128 362
366 333 365
368 128 184
370 333 369
372 5 74
374 128 372
376 333 375
378 128 138
380 333 379
382 128 0
384 333 383
386 128 242
388 333 387
390 7 106
392 128 390
394 333 393
396 128 258
398 333 397
400 128 170
402 333 401
404 7 118
406 128 404
408 333 407
410 5 122
412 128 410
414 333 413
416 11 126
418 128 416
420 333 419
i0 controllable_refund
i1 controllable_ship
i2 i_cancel
i3 i_set
i4 i_pay
l0 latch_x_var1
l1 latch_x_var1_prime
l2 latch_x_var2
l3 latch_x_var2_prime
l4 latch_x_var3
l5 latch_x_var3_prime
l6 latch_x_var4
l7 latch_x_var4_prime
l8 latch_x_var5
l9 latch_x_var5_prime
l10 latch_x_var6
l11 latch_x_var6_prime
l12 latch_x_var7
l13 latch_x_var7_prime
l14 latch_x_var8
l15 latch_x_var8_prime
l16 latch_x_var9
l17 latch_x_var9_prime
l18 latch_x_var10
l19 latch_x_var10_prime
l20 latch_x_var11
l21 latch_x_var11_prime
l22 latch_x_var12
l23 latch_x_var12_prime
l24 latch_x_var13
l25 latch_x_var13_prime
l26 latch_x_var14
l27 latch_x_var14_prime
l28 latch_x_var15
l29 latch_x_var15_prime
l30 latch_x_var16
l31 latch_x_var16_prime
l32 latch_x_var17
l33 latch_x_var17_prime
l34 latch_x_var18
l35 latch_x_var18_prime
l36 latch_x_var19
l37 latch_x_var19_prime
l38 latch_x_var20
l39 latch_x_var20_prime
l40 latch_x_var21
l41 latch_x_var21_prime
l42 latch_x_var22
l43 latch_x_var22_prime
l44 latch_x_var23
l45 latch_x_var23_prime
l46 latch_x_var24
l47 latch_x_var24_prime
l48 latch_x_var25
l49 latch_x_var25_prime
l50 latch_x_var26
l51 latch_x_var26_prime
l52 latch_x_var27
l53 latch_x_var27_prime
l54 latch_x_var28
l55 latch_x_var28_prime
l56 latch_x_var29
l57 latch_x_var29_prime
l58 latch_init
o0 F(X)
c

---state var:
x_var1: (before (since PropositionalTrue(Logic.PLTL) (and (weakbefore false) (not refund) (not ship))))
x_var2: (before (since (triggers false (or (not ship) set)) (and ship (not set) (weakbefore (triggers false (not ship))))))
x_var3: (weakbefore (triggers false (or (not ship) set)))
x_var4: (weakbefore (triggers false (or (not cancel) ship)))
x_var5: (weakbefore (triggers false (and (or (not (before (and (not refund) (not ship)))) (and (or refund ship) (not (and refund ship)))) (or (not (before (before (and (not refund) (not ship))))) (and (not refund) (not ship))))))
x_var6: (weakbefore (triggers false (or (not ship) (since PropositionalTrue(Logic.PLTL) pay))))
x_var7: (weakbefore (triggers false (or (not ship) (since PropositionalTrue(Logic.PLTL) set))))
x_var8: (before (before (or cancel set pay)))
x_var9: (before (since PropositionalTrue(Logic.PLTL) (and (weakbefore false) (or cancel set pay))))
x_var10: (before (since (triggers false (or (not ship) cancel)) (and ship (not cancel) (weakbefore (triggers false (not ship))))))
x_var11: (weakbefore (triggers false (or (not refund) (since PropositionalTrue(Logic.PLTL) pay))))
x_var12: (weakbefore (triggers false (or (not pay) (weakbefore (triggers false (not pay))))))
x_var13: (before (since PropositionalTrue(Logic.PLTL) pay))
x_var14: (weakbefore (triggers false (not pay)))
x_var15: (before (since (triggers false (or (not cancel) ship)) (and cancel (not ship) (weakbefore (triggers false (not cancel))))))
x_var16: (weakbefore (triggers false (not ship)))
x_var17: (weakbefore (triggers refund (or (not pay) ship refund)))
x_var18: (before (before (and (not refund) (not ship))))
x_var19: (weakbefore false)
x_var20: (before (and (not refund) (not ship)))
x_var21: (weakbefore (triggers false (or (not cancel) (weakbefore (triggers false (not cancel))))))
x_var22: (before (since PropositionalTrue(Logic.PLTL) set))
x_var23: (before (or cancel set pay))
x_var24: (weakbefore (triggers false (not cancel)))
x_var25: (weakbefore (triggers false (and (or (not (or cancel set pay)) (and (not (and cancel set)) (not (and cancel pay)) (not (and set pay)))) (or (not (before (or cancel set pay))) (and (not cancel) (not set) (not pay))) (or (not (before (before (or cancel set pay)))) cancel set pay))))
x_var26: (weakbefore (triggers false (or (not ship) cancel)))
x_var27: (weakbefore (and (not cancel) (or false (weakbefore (triggers false (not cancel))))))
x_var28: (weakbefore (and (not ship) (or false (weakbefore (triggers false (not ship))))))
x_var29: (weakbefore (and (not pay) (or false (weakbefore (triggers false (not pay))))))

---
initial state:
(and (not x_var1) (not x_var2) (not x_var8) (not x_var9) (not x_var10) (not x_var13) (not x_var15) (not x_var18) (not x_var20) (not x_var22) (not x_var23) x_var3 x_var4 x_var5 x_var6 x_var7 x_var11 x_var12 x_var14 x_var16 x_var17 x_var19 x_var21 x_var24 x_var25 x_var26 x_var27 x_var28 x_var29) 
---
transition relation:
x_var1_prime iff (or (and x_var19 (not refund) (not ship)) (and PropositionalTrue(Logic.PLTL) x_var1))
x_var2_prime iff (or (and ship (not set) x_var28) (and (or (not ship) set) (or false x_var3) x_var2))
x_var8_prime iff x_var23
x_var9_prime iff (or (and x_var19 (or cancel set pay)) (and PropositionalTrue(Logic.PLTL) x_var9))
x_var10_prime iff (or (and ship (not cancel) x_var28) (and (or (not ship) cancel) (or false x_var26) x_var10))
x_var13_prime iff (or pay (and PropositionalTrue(Logic.PLTL) x_var13))
x_var15_prime iff (or (and cancel (not ship) x_var27) (and (or (not cancel) ship) (or false x_var4) x_var15))
x_var18_prime iff x_var20
x_var20_prime iff (and (not refund) (not ship))
x_var22_prime iff (or set (and PropositionalTrue(Logic.PLTL) x_var22))
x_var23_prime iff (or cancel set pay)
x_var3_prime iff (and (or (not ship) set) (or false x_var3))
x_var4_prime iff (and (or (not cancel) ship) (or false x_var4))
x_var5_prime iff (and (or (not x_var20) (and (or refund ship) (not (and refund ship)))) (or (not x_var18) (and (not refund) (not ship))) (or false x_var5))
x_var6_prime iff (and (or (not ship) pay (and PropositionalTrue(Logic.PLTL) x_var13)) (or false x_var6))
x_var7_prime iff (and (or (not ship) set (and PropositionalTrue(Logic.PLTL) x_var22)) (or false x_var7))
x_var11_prime iff (and (or (not refund) pay (and PropositionalTrue(Logic.PLTL) x_var13)) (or false x_var11))
x_var12_prime iff (and (or (not pay) x_var29) (or false x_var12))
x_var14_prime iff (and (not pay) (or false x_var14))
x_var16_prime iff (and (not ship) (or false x_var16))
x_var17_prime iff (and (or (not pay) ship refund) (or refund x_var17))
x_var19_prime iff false
x_var21_prime iff (and (or (not cancel) x_var27) (or false x_var21))
x_var24_prime iff (and (not cancel) (or false x_var24))
x_var25_prime iff (and (or (not (or cancel set pay)) (and (not (and cancel set)) (not (and cancel pay)) (not (and set pay)))) (or (not x_var23) (and (not cancel) (not set) (not pay))) (or (not x_var8) cancel set pay) (or false x_var25))
x_var26_prime iff (and (or (not ship) cancel) (or false x_var26))
x_var27_prime iff (and (not cancel) (or false x_var27))
x_var28_prime iff (and (not ship) (or false x_var28))
x_var29_prime iff (and (not pay) (or false x_var29))
---
final state: 
(and (or ship (and (or (not pay) ship refund) (or refund x_var17))) (or (and cancel (not ship) x_var27) (and (or (not cancel) ship) (or false x_var4) x_var15)) (or (not ship) set (and PropositionalTrue(Logic.PLTL) x_var22)) (or false x_var7) (or (not refund) pay (and PropositionalTrue(Logic.PLTL) x_var13)) (or false x_var11) (or (not ship) pay (and PropositionalTrue(Logic.PLTL) x_var13)) (or false x_var6) (or (not (and (or (not cancel) x_var27) (or false x_var21) (or (and ship (not cancel) x_var28) (and (or (not ship) cancel) (or false x_var26) x_var10)) (or (and ship (not set) x_var28) (and (or (not ship) set) (or false x_var3) x_var2)) (or (and (not pay) (or false x_var14)) set (and PropositionalTrue(Logic.PLTL) x_var22)) (or (not pay) x_var29) (or false x_var12) (or (and x_var19 (or cancel set pay)) (and PropositionalTrue(Logic.PLTL) x_var9)) (or (not (or cancel set pay)) (and (not (and cancel set)) (not (and cancel pay)) (not (and set pay)))) (or (not x_var23) (and (not cancel) (not set) (not pay))) (or (not x_var8) cancel set pay) (or false x_var25))) (and (or (and x_var19 (not refund) (not ship)) (and PropositionalTrue(Logic.PLTL) x_var1)) (or (not x_var20) (and (or refund ship) (not (and refund ship)))) (or (not x_var18) (and (not refund) (not ship))) (or false x_var5))))
