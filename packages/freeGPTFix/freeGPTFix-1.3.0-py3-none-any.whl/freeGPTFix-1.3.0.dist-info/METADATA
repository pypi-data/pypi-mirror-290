Metadata-Version: 2.1
Name: freeGPTFix
Version: 1.3.0
Summary: freeGPT provides free access to text and image generation models.
Home-page: https://github.com/RedPiarOfficial/FreeGPTFix
Author: RedPiar
Author-email: Redpiar.official@gmail.com
License: MIT
Project-URL: Source, https://github.com/RedPiarOfficial/FreeGPTFix
Keywords: artificial-intelligence,machine-learning,deep-learning,gpt4free,gpt4all,freegpt,chatgpt,python,llama,llm,nlp,gpt,ai
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests

# FreeGPTFix

<img src="https://repository-images.githubusercontent.com/636250478/f62a1186-b84b-4e7a-86f1-145e32163a59" align="right" width=170>

![Status](https://img.shields.io/pypi/status/freeGPT)

freeGPT provides free access to text and image generation models.

## Getting Started:

    pip install freeGPTFix

[DOCS](https://red-3.gitbook.io/freegptfix/getting-started/quickstart)

## Sources:

| Model        | Website                                                |
| ------------ | ------------------------------------------------------ |
| gpt3         | [chat9.yqcloud.top](https://chat9.yqcloud.top/)        |
| gpt4         | [you.com](https://you.com/)                            |
| gpt3_5       | [vitalentum.net](https://vitalentum.net/free-chat-gpt) |
| gpt4_omni       | [aichatonline.org](https://aichatonline.org/) |
| gemini       | [editee.com](https://editee.com/chat-gpt) |
| prodia       | [prodia.com](https://prodia.com/)                      |
| pollinations | [pollinations.ai](https://pollinations.ai/)            |

## Examples:

### Text Completion:

```python
from freeGPTFix import Client

while True:
    prompt = input("> ")
    try:
        resp = Client.create_completion("MODEL", prompt)
        print(resp)
    except Exception as e:
        print(f"ðŸ¤–: {e}")
```

### Image Generation:

```python
from freeGPTFix import Client
from PIL import Image
from io import BytesIO

while True:
    prompt = input("> ")
    try:
        resp = Client.create_generation("MODEL", prompt)
        Image.open(BytesIO(resp)).show()
        print(f"ðŸ¤–: Image shown.")
    except Exception as e:
        print(f"ðŸ¤–: {e}")
```
