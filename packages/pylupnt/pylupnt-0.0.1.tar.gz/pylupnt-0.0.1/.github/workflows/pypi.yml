name: pypi

on: push

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        os: [ubuntu-latest]
    env:
      LUPNT_DATA_PATH: ${{ github.workspace }}/LuPNT_data
      CIBW_ENVIRONMENT: LUPNT_DATA_PATH=/project/LuPNT_data
      MACOSX_DEPLOYMENT_TARGET: 14.0

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        id: cache-lupnt-data
        with:
          path: LuPNT_data
          key: LuPNT_data-${{ vars.LUPNT_DATA_CACHE_DATE }}

      # Ubuntu
      - name: Install OpenMP and download data (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          echo "LUPNT_DATA_PATH = $LUPNT_DATA_PATH"
          sudo apt-get update
          sudo apt-get install -y libomp-dev

      # MacOS
      - name: Install OpenMP (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install libomp

      # MacOS + Ubuntu
      - name: Download and unzip LuPNT_data (MacOS + Ubuntu)
        if: |
          (matrix.os == 'macos-latest'   ||
           matrix.os == 'ubuntu-latest') &&
          steps.cache-lupnt-data.outputs.cache-hit != 'true'
        run: |
          curl -L https://bit.ly/LuPNT_data -o LuPNT_data.zip
          unzip LuPNT_data.zip
          rm LuPNT_data.zip

      # Windows
      - name: Download and unzip LuPNT_data (Windows)
        if: |
          matrix.os == 'windows-latest' &&
          steps.cache-lupnt-data.outputs.cache-hit != 'true'
        run: |
          $ProgressPreference = 'SilentlyContinue'
          Invoke-WebRequest -Uri "https://bit.ly/LuPNT_data" -OutFile "LuPNT_data.zip"
          Expand-Archive -Path "LuPNT_data.zip" -DestinationPath "."
          Remove-Item "LuPNT_data.zip"

      # All
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.20

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          merge-multiple: true
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
