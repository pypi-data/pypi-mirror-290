[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "keystone-security"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
keywords = []
authors = [
    { name = "Chris O'Neill", email = "chris@purplejay.io" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    'cryptography',
    'PyJWT',
    'loguru',
    'pydantic-settings',
    'fastapi-azure-auth',
    "python-jose",
    "itsdangerous",
    "python-multipart",
    "pkce",
    "jinja2"
]

[project.optional-dependencies]
dev = [
    "ruff",
]

test = [
    "pytest",
    "coverage",
    "uvicorn"
]


[tool.hatch.version]
path = "src/keystone_security/__about__.py"

[tool.hatch.envs.default]
dependencies = [
    "coverage[toml]>=6.5",
    "pytest",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
    "- coverage combine",
    "coverage report",
]
cov = [
    "test-cov",
    "cov-report",
]


[[tool.hatch.envs.all.matrix]]
python = ["3.7", "3.8", "3.9", "3.10", "3.11"]

[tool.hatch.envs.lint]
detached = true
dependencies = [
    "black>=23.1.0",
    "mypy>=1.0.0",
    "ruff>=0.0.243",
]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:src/keystone_security tests}"
style = [
    "ruff {args:.}",
    "black --check --diff {args:.}",
]
fmt = [
    "black {args:.}",
    "ruff --fix {args:.}",
    "style",
]
all = [
    "style",
    "typing",
]

[tool.black]
target-version = ["py37"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
target-version = "py37"
line-length = 120
[tool.ruff.lint]
select = [
    "A",
    "ARG",
    "B",
    "C",
    "DTZ",
    "E",
    "EM",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "T",
    "TID",
    "UP",
    "W",
    "YTT",
]
ignore = [
    # Allow non-abstract empty methods in abstract base classes
    "B027",
    # Allow boolean positional values in function calls, like `dict.get(... True)`
    "FBT003",
    # Ignore checks for possible passwords
    "S105", "S106", "S107",
    # Ignore complexity
    "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
    "ISC001"
]
unfixable = [
    # Don't touch unused imports
    "F401",
]

[tool.ruff.lint.isort]
known-first-party = ["keystone_security"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.coverage.run]
source_pkgs = ["keystone_security", "tests"]
branch = true
parallel = true
omit = [
    "src/keystone_security/__about__.py",
]

[tool.coverage.paths]
keystone_security = ["src/keystone_security", "*/keystone-security/src/keystone_security"]
tests = ["tests", "*/keystone-security/tests"]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
