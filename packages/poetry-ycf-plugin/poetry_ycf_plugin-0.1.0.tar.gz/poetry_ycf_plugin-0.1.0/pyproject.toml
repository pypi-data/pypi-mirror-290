[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "poetry-ycf-plugin"
version = "0.0.0"
description = "Poetry plugin for working with Yandex Cloud Functions"
homepage = "https://projects.rocshers.com/open-source/poetry-ycf-plugin"
repository = "https://gitlab.com/rocshers/python/poetry-ycf-plugin"
authors = ["Aleksei Marusich <aleksei.marusich@rocshers.com>"]
readme = "readme.md"
license = "MIT"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Topic :: System :: Installation/Setup",
    "Topic :: System :: Software Distribution",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
]
packages = [{include = "poetry_ycf_plugin"}]

[tool.poetry.plugins."poetry.plugin"]
poetry-ycf-plugin = "poetry_ycf_plugin.plugins:PoetryYcfPlugin"

[tool.poetry.plugins."poetry.application.plugin"]
poetry-ycf-plugin = "poetry_ycf_plugin.plugins:PoetryYcfApplicationPlugin"

[tool.poetry.dependencies]
python = ">=3.12,<4"
poetry = ">=1.8.3"
pydantic = "^2.8.2"
pydantic-settings = "^2.4.0"
poetry-plugin-export = "^1.8.0"
boto3 = "^1.34.159"
pyjwt = "^2.9.0"

[tool.poetry.group.dev_running.dependencies]
python = "3.12"
poetry = "1.8.3"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
pytest-asyncio = "^0.23.8"
ruff = "^0.5.6"
black = "^24.8.0"
isort = "^5.13.2"
mypy = "^1.11.1"
pre-commit = "^3.8.0"
pre-commit-hooks = "^4.6.0"
vulture = "^2.11"

[tool.poetry.group.tools.dependencies]
ycf-tools = "^0.1.0"
poetry-git-version-plugin = "^1.0.8"

[tool.black]
skip-string-normalization = true
line-length = 120

[tool.isort]
profile = "black"
line_length = 120

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
ignore = ["UP004", "D100", "D101", "D102", "D103", "D104", "D107", "D400", "D415"]

[tool.ruff.format]
quote-style = "single"
preview = true

[tool.coverage.run]
omit = [
    "*/tests/*",
    "install-poetry.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.pytest.ini_options]
addopts = "-vvs --tb=short"
xfail_strict = true
testpaths = [
    "tests",
    "integration",
]
python_files = [
    "tests/*.py",
    "test_*.py"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore:Module already imported:pytest.PytestWarning"
]
log_cli=true
log_level='INFO'
asyncio_mode = "auto"

[tool.mypy]
python_version = 3.12

[tool.poetry-ycf-plugin]
entrypoint = 'test_project.entrypoint.index_entrypoint'
build_dependencies_groups = ['tools']
