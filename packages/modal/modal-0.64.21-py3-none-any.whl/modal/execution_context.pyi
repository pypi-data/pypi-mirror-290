import _contextvars
import typing
import typing_extensions

def is_local() -> bool: ...
async def _interact() -> None: ...

class __interact_spec(typing_extensions.Protocol):
    def __call__(self) -> None: ...
    async def aio(self, *args, **kwargs) -> None: ...

interact: __interact_spec

def current_input_id() -> typing.Union[str, None]: ...
def current_function_call_id() -> typing.Union[str, None]: ...
def _set_current_context_ids(
    input_ids: typing.List[str], function_call_ids: typing.List[str]
) -> typing.Callable[[], None]: ...

_current_input_id: _contextvars.ContextVar

_current_function_call_id: _contextvars.ContextVar
