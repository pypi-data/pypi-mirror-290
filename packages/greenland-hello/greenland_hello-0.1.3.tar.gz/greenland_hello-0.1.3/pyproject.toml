[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "greenland-hello"
dynamic = ["version"]
description = 'A demo for setting up a greenland python project'
readme = "README.md"
requires-python = ">=3.8"
license = {text = "GPL-3.0-or-later"}
keywords = []
author  = {text = "Markus E Leypold"}
authors = [
   { name = "Markus E Leypold" },
   { name = "Markus E Leypold", email = "pythonista-4sda212@m-e-leypold.de"}
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = ['docopt-ng']

[project.urls]
Homepage = "https://codeberg.org/m-e-leypold/greenland-hello"
Documentation = "https://codeberg.org/m-e-leypold/greenland-hello#readme"
Issues = "https://codeberg.org/m-e-leypold/greenland-hello/issues"
Source = "https://codeberg.org/m-e-leypold/greenland-hello"

[project.scripts]
greenland-hello = "greenland.hello.bin.greenland_hello:main"

[tool.hatch.build.targets.wheel]
packages = ["src/greenland"]


[tool.hatch.build.targets.sdist]
exclude = [
  "/.github",
  "/docs",
  "*~",
  "__pycache__",
  "/.coverage",
  "/.gitignore"
]

[tool.hatch.version]
# path = "src/greenland/hello/__about__.py"
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/greenland/hello/__version__.py"

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.12", "3.11", "3.10", "3.9", "3.8", "pypy3.10", "pypy3.9"]

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0"
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/greenland/hello tests}"

[tool.hatch.envs.hatch-test.scripts]
run = "pytest{env:HATCH_TEST_ARGS:} --json-report --json-report-file='.build/tests/{env:HATCH_ENV_ACTIVE:default}.results.json' {args}"
run-cov = "coverage run -m pytest{env:HATCH_TEST_ARGS:} {args}"
cov-combine = "coverage combine"
cov-report = "coverage report"

# TODO: Also squirrel away the coverage files + combine them

[tool.hatch.envs.hatch-test]
# default-args = ["tests"]
# extra-args   = ["--json-report", "--json-report-file={env:HATCH_ENV_ACTIVE:default}.json"]
extra-dependencies = [
  "pytest-json-report",
  # "pyfakefs",
  # "pytest-asyncio",
  # "pytest-benchmark",
  # "pytest-memray",
  # "pytest-playwright",
  # "pytest-print",
]


[tool.coverage.run]
source_pkgs = ["greenland.hello", "tests"]
branch = true
parallel = true
omit = [
  "src/greenland/hello/__about__.py",
]

[tool.coverage.paths]
greenland_hello = ["src/greenland/hello", "*/greenland-hello/src/greenland/hello"]
tests = ["tests", "*/greenland-hello/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
