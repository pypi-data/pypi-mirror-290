Metadata-Version: 2.3
Name: doxa-cli
Version: 0.1.8
Summary: The CLI for interacting with DOXA, a powerful platform for running engaging online artificial intelligence competitions.
Project-URL: Homepage, https://github.com/DoxaAI/cli
Project-URL: Bug Tracker, https://github.com/DoxaAI/cli/issues
Author-email: Jeremy Lo Ying Ping <jeremy@doxaai.com>
License: MIT License
        
        Copyright (c) 2022 DOXA
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.7
Requires-Dist: halo>=0.0.31,~=0.0.31
Requires-Dist: pyyaml>=6.0
Requires-Dist: requests-toolbelt~=0.10.1
Requires-Dist: requests~=2.26.0
Requires-Dist: typer[all]>=0.9.0
Description-Content-Type: text/markdown

# DOXA CLI

The DOXA CLI is the primary tool for uploading and submitting agents to [DOXA](http://doxaai.com/): a powerful platform for hosting engaging artificial intelligence competitions.

üîó Compete on [DOXA](http://doxaai.com/)

‚û°Ô∏è Join the [DOXA Community on Discord](https://discord.gg/MUvbQ3UYcf)


## Installation

The DOXA CLI may be installed using `pip` in the following way:

```py
pip install doxa-cli
```

## Using the DOXA CLI

Assuming you have your Python `Scripts` folder on your `PATH`, you can use the DOXA CLI via the `doxa` command in your shell. Otherwise, you will have to use `python -m doxa_cli` (or `python3 -m doxa_cli` on some systems) to access DOXA CLI commands.

### Logging into the CLI with your DOXA account

Before you can upload agents to DOXA using the CLI, you must first log in with your DOXA account by running the following command:
```bash
doxa login
```

If supported, this will open an authorisation prompt in your default browser. If you are not already logged in on [doxaai.com](https://doxaai.com/), you will first be invited to do so. Thereafter, you wil be asked to authorise the DOXA CLI to have access to your DOXA account. Once you signify your approval, the DOXA CLI will automatically log you in within a few seconds.

By default, the DOXA CLI will store its configuration in a location that follows the norm for your operating system (e.g. within `%APPDATA%\doxa\doxa` on Windows, `~/Library/Application Support/doxa` on macOS and `~/.config/doxa` on Linux). You can find this location by running `doxa config`. If for whatever reason you would like to store the DOXA CLI configuration elsewhere (e.g. due to a permissions issue), you may use a different directory by setting the `DOXA_CONFIG_DIRECTORY` environment variable.

### Logging out

You may log out by running the following command:
```bash
doxa logout
```

### Retrieving user information

You can retrieve information on the user account with which you are currently logged in by performing the following command:
```bash
doxa user
```

### Uploading agents to DOXA

You may upload and submit agents to DOXA using the following command:

```bash
doxa upload [AGENT DIRECTORY]
```

The agent directory must contain a `doxa.yaml` file informing DOXA how to process your submission.

The following is an example of the contents of one such `doxa.yaml` file:
```yaml
competition: uttt
environment: cpu
language: python
entrypoint: evaluate.py
```
