Metadata-Version: 2.1
Name: uniseg
Version: 0.8.1
Summary: Determine Unicode text segmentations.
Author-email: Masaaki Shibata <mshibata@emptypage.jp>
Project-URL: Documentation, https://uniseg-py.readthedocs.io/
Project-URL: Repository, https://bitbucket.org/emptypage/uniseg-py/
Keywords: text,unicode
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Text Processing
Requires-Python: >=3.8
Description-Content-Type: text/x-rst
License-File: LICENSE
Provides-Extra: dev
Requires-Dist: build; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: setuptools>=61; extra == "dev"
Requires-Dist: setuptools-scm; extra == "dev"
Requires-Dist: sphinx; extra == "dev"
Requires-Dist: sphinx-rtd-theme; extra == "dev"
Requires-Dist: twine; extra == "dev"

======
uniseg
======

A Python package to determine Unicode text segmentations.


Features
========

This package provides:

- Functions to get Unicode Character Database (UCD) properties concerned with
  text segmentations.
- Functions to determine segmentation boundaries of Unicode strings.
- Classes that help implement Unicode-aware text wrapping on both console
  (monospace) and graphical (monospace / proportional) font environments.

Supporting segmentations are:

*code point*
    `Code point <https://www.unicode.org/glossary/#code_point>`_ is *"any value
    in the Unicode codespace."* It is the basic unit for processing Unicode
    strings.
*grapheme cluster*
    `Grapheme cluster <https://www.unicode.org/glossary/#grapheme_cluster>`_
    approximately represents *"user-perceived character."* They may be made
    up of single or multiple Unicode code points. e.g. "G" + *acute-accent* is
    a *user-perceived character*.
*word break*
    Word boundaries are familiar segmentation in many common text operations.
    e.g. Unit for text highlighting, cursor jumping etc. Note that *words* are
    not determinable only by spaces or punctuations in text in some languages.
    Such languages like Thai or Japanese require dictionaries to determine
    appropriate word boundaries. Though the package only provides simple word
    breaking implementation which is based on the scripts and doesn't use any
    dictionaries, it also provides ways to customize its default behavior.
*sentence break*
    Sentence breaks are also common in text processing but they are more
    contextual and less formal. The sentence breaking implementation (which is
    specified in UAX: Unicode Standard Annex) in the package is simple and
    formal too. But it must be still useful in some usages.
*line break*
    Implementing line breaking algorithm is one of the key features of this
    package. The feature is important in many general text presentations in
    both CLI and GUI applications.


Requirements
============

Python 3.8 or later.


Install
=======

::

  pip install uniseg


Changes
=======

0.8.1 (2024-08-13)

- Fix `sentence_break('/')` raised an exception. (Thanks to Nathaniel Mills)

0.8.0 (2024-02-08)

- Unicode 15.0.0.
- Regex-based grapheme cluster segmentation.
- Quit supporting Python versions < 3.8.

0.7.2 (2022-09-20)

- Improve performance of Unicode lookups. PR by Max Bachmann.
  <https://bitbucket.org/emptypage/uniseg-py/pull-requests/1>

0.7.1 (2015-05-02)

- CHANGE: wrap.Wrapper.wrap(): returns the count of lines now.
- Separate LICENSE from README.txt for the packaging-related reason in some
  environments.

0.7.0 (2015-02-27)

- CHANGE: Quitted gathering all submodules's members on the top, uniseg
  module.
- CHANGE: Reform ``uniseg.wrap`` module and sample scripts.
- Maintained uniseg.wrap module, and sample scripts work again.

0.6.4 (2015-02-10)

- Add ``uniseg-dbpath`` console command, which just print the path of
  ``ucd.sqlite3``.
- Include sample scripts under the package's subdirectory.

0.6.3 (2015-01-25)

- Python 3.4
- Support modern setuptools, pip and wheel.

0.6.2 (2013-06-09)

- Python 3.3

0.6.1 (2013-06-08)

- Unicode 6.2.0


References
==========

- *UAX #29 Unicode Text Segmentation* (15.0.0)
    <https://www.unicode.org/reports/tr29/tr29-41.html>
- *UAX #14: Unicode Line Breaking Algorithm* (15.0.0)
    <https://www.unicode.org/reports/tr14/tr14-49.html>


Related / Similar Projects
==========================

`PyICU <https://pypi.python.org/pypi/PyICU>`_ - Python extension wrapping the
ICU C++ API

    *PyICU* is a Python extension wrapping International Components for
    Unicode library (ICU). It also provides text segmentation supports and
    they just perform richer and faster than those of ours. PyICU is an
    extension library so it requires ICU dynamic library (binary files) and
    compiler to build the extension. Our package is written in pure Python;
    it runs slower but is more portable.

`pytextseg <https://pypi.python.org/pypi/pytextseg>`_ - Python module for text
segmentation

    *pytextseg* package focuses very similar goal to ours; it provides
    Unicode-aware text wrapping features. They designed and uses their
    original string class (not built-in ``unicode`` / ``str`` classes) for the
    purpose. We use strings as just ordinary built-in ``unicode`` / ``str``
    objects for text processing in our modules.
