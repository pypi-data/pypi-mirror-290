define(["@jupyter-widgets/base"],(e=>(()=>{"use strict";var t={49:function(e,t){var n=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))((function(i,s){function r(e){try{a(o.next(e))}catch(e){s(e)}}function u(e){try{a(o.throw(e))}catch(e){s(e)}}function a(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(r,u)}a((o=o.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.suspend=t.resume=t.getSampleRate=t.run=t.blob_url=t.audiodata=void 0;class o extends DataView{setFourCC(e,t){for(let n=0;n<4;n++)this.setUint8(e+n,t.charCodeAt(n))}}let i,s,r,u;navigator.mediaDevices?console.log("Info: getUserMedia is supported."):console.log("Error: getUserMedia is not supported.");let a=[];t.audiodata=[],t.blob_url="",t.run=function(e=500){return n(this,void 0,void 0,(function*(){console.log("(1)");const t=new Blob(['class AudioRecorderProcessor extends AudioWorkletProcessor\n{\n  constructor() {\n    super();\n  }\n\n  static get parameterDescriptors() {\n    return [\n      { name: "isRecording", defaultValue: 0 }\n    ];\n  }\n\n  process(inputs, outputs, params) {\n    if(!inputs[0][0]) return true;\n\n    if(params.isRecording[0] > 0) {\n      const firstInput = inputs[0];\n      const firstOutput = outputs[0];\n      const f2s_gain = 1. / firstInput.length;\n      for(let n=0; n<firstInput.length; n++) {\n        for(let m=0; m<firstInput[0].length; m++) {\n          firstOutput[0][m] += firstInput[n][m] * f2s_gain;\n        }\n      }\n      this.port.postMessage(firstOutput[0]);\n    }\n\n    return true;\n  }\n}\nregisterProcessor("audio-recorder-processor", AudioRecorderProcessor);'],{type:"application/javascript"});yield function(e,t){return n(this,void 0,void 0,(function*(){if(!i)try{i=new AudioContext,yield i.suspend(),yield i.audioWorklet.addModule(e),s=new AudioWorkletNode(i,"audio-recorder-processor"),console.log(i)}catch(e){return console.log(e),null}return s}))}(URL.createObjectURL(t)),console.log(s),console.log("(2)"),yield function(e){return n(this,void 0,void 0,(function*(){if(!r)try{e||(e={video:!1,audio:{channelCount:{ideal:1},sampleRate:{ideal:i.sampleRate},sampleSize:{ideal:16},autoGainControl:!1,echoCancellation:!1,noiseSuppression:!1}});const t=yield navigator.mediaDevices.getUserMedia(e);r=yield i.createMediaStreamSource(t),u=yield t.getAudioTracks()[0].getSettings(),u.sampleRate=u.sampleRate||i.sampleRate,console.log(t),console.log(u)}catch(e){return console.log(e),null}return r}))}(),console.log("(3)"),yield r.connect(s),console.log("(4)"),yield i.resume(),yield setTimeout((()=>{i.suspend()}),e)}))},t.getSampleRate=function(){return u.sampleRate||i.sampleRate},t.resume=function(){a=[],s.port.onmessage=e=>{a.push(e.data)},i.resume(),s.parameters.get("isRecording").setValueAtTime(1,i.currentTime),console.log("recording")},t.suspend=function(){i.suspend(),s.parameters.get("isRecording").setValueAtTime(0,i.currentTime),console.log("suspended");const e=a.reduce(((e,t)=>e+t.length),0);t.audiodata=new Array(e);let n=0;for(const e of a)for(const o of e)t.audiodata[n++]=o;const r=function(e,t){16!==t.sampleSize&&console.log("Warning: SampleSize is not 16 [bit].\n","The sound is forcely quantized as int16 (signed short) sound.",t),1!==t.channelCount&&console.log("Warning: #Channel is not 1 (monoral).\n",'The sound is forcely converted to monaural sound by "(L+R)/2" method.',t);const n=t.sampleRate||48e3,i=2*n,s=a.reduce(((e,t)=>e+t.length),0),r=2*s,u=new ArrayBuffer(44+r),l=new o(u);let d=0;l.setFourCC(d,"RIFF"),d+=4,l.setUint32(d,r+36,!0),d+=4,l.setFourCC(d,"WAVE"),d+=4,l.setFourCC(d,"fmt "),d+=4,l.setUint32(d,16,!0),d+=4,l.setUint16(d,1,!0),d+=2,l.setUint16(d,1,!0),d+=2,l.setUint32(d,n,!0),d+=4,l.setUint32(d,i,!0),d+=4,l.setUint16(d,2,!0),d+=2,l.setUint16(d,16,!0),d+=2,l.setFourCC(d,"data"),d+=4,l.setUint32(d,r,!0),d+=4;for(const t of e)l.setInt16(d,Math.round(32767*t),!0),d+=2;return console.log("Info: sampling_rate = "+n+" length = "+s+", [sample]"),new Blob([l],{type:"audio/wav"})}(t.audiodata,u);console.log(r),t.blob_url=URL.createObjectURL(r)}},112:function(e,t,n){var o=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n),Object.defineProperty(e,o,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),i=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||o(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),window.__webpack_public_path__=document.querySelector("body").getAttribute("data-base-url")+"nbextensions/ipyaudioworklet",i(n(607),t)},607:function(e,t,n){var o=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n),Object.defineProperty(e,o,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),i=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||o(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),i(n(412),t),i(n(891),t)},412:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MODULE_NAME=t.MODULE_VERSION=void 0;const o=n(147);t.MODULE_VERSION=o.version,t.MODULE_NAME=o.name},891:function(e,t,n){var o=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n),Object.defineProperty(e,o,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&o(t,e,n);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.AudioRecorderView=t.AudioRecorderModel=void 0;const r=n(146),u=n(412),a=s(n(49));class l extends r.DOMWidgetModel{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:l.model_name,_model_module:l.model_module,_model_module_version:l.model_module_version,_view_name:l.view_name,_view_module:l.view_module,_view_module_version:l.view_module_version,value:"Audio Recorder",audiodata:[],blob_url:"",filename:"default.wav"})}}t.AudioRecorderModel=l,l.serializers=Object.assign({},r.DOMWidgetModel.serializers),l.model_name="AudioRecorderModel",l.model_module=u.MODULE_NAME,l.model_module_version=u.MODULE_VERSION,l.view_name="AudioRecorderView",l.view_module=u.MODULE_NAME,l.view_module_version=u.MODULE_VERSION;class d extends r.DOMWidgetView{render(){this.el.classList.add("jupyter-widgets"),this._message=document.createElement("div"),this.el.appendChild(this._message),this._bootButton=document.createElement("button"),this._bootButton.classList.add("jupyter-widgets","jupyter-button","widget-button"),this._bootButton.textContent="Boot RECORDER",this._bootButton.title="run()",this.el.appendChild(this._bootButton),this._resumeButton=document.createElement("button"),this._resumeButton.classList.add("jupyter-widgets","jupyter-button","widget-button"),this._resumeButton.disabled=!0,this._resumeButton.textContent="Record",this._resumeButton.title="resume()",this.el.appendChild(this._resumeButton),this._suspendButton=document.createElement("button"),this._suspendButton.classList.add("jupyter-widgets","jupyter-button","widget-button"),this._suspendButton.disabled=!0,this._suspendButton.textContent="Stop",this._suspendButton.title="suspend()",this.el.appendChild(this._suspendButton),this._audioControl=document.createElement("audio"),this._audioControl.controls=!0,this.el.appendChild(this._audioControl),this.value_changed(),this.model.on("change:value",this.value_changed,this),this.model.on("msg:custom",this.on_msg,this),this._bootButton.onclick=this._onClickBootButton.bind(this),this._resumeButton.onclick=this._onClickResumeButton.bind(this),this._suspendButton.onclick=this._onClickSuspendButton.bind(this)}value_changed(){this._message.textContent=this.model.get("value")}on_msg(e,t){switch(e.cmd){case"run":this._onClickBootButton();break;case"resume":this._onClickResumeButton();break;case"suspend":this._onClickSuspendButton()}}_onClickBootButton(){this.model.set("value","AudioRecorder is booting..."),this.model.save_changes(),a.run().then((e=>{const t=a.getSampleRate()||-1;this.model.set("value","AudioRecorder is ready (Sampling rate: "+String(t)+" Hz)."),this.model.set("sampleRate",t),this.model.save_changes(),this._bootButton.disabled=!0,this._resumeButton.disabled=!1}))}_onClickResumeButton(){a.resume(),this.model.set("value",this._message.textContent+" [RESUME]"),this.model.save_changes(),this._resumeButton.disabled=!0,this._suspendButton.disabled=!1}_onClickSuspendButton(){a.suspend(),this.model.set("audiodata",a.audiodata),this.model.set("blob_url",a.blob_url),this.model.set("value",this._message.textContent+" [SUSPEND]"),this.model.save_changes(),this._audioControl.src=a.blob_url,this._audioControl.title=this.model.get("filename"),this._resumeButton.disabled=!1,this._suspendButton.disabled=!0}}t.AudioRecorderView=d},146:t=>{t.exports=e},147:e=>{e.exports=JSON.parse('{"name":"@naoh16/ipyaudioworklet","version":"0.4.4","description":"A Jupyter Widget for Web Audio Recording using Audio Worklet","keywords":["jupyter","jupyterlab","jupyterlab-extension","widgets"],"files":["lib/**/*.js","dist/*.js","css/*.css"],"homepage":"https://github.com/naoh16/ipyaudioworklet","bugs":{"url":"https://github.com/naoh16/ipyaudioworklet/issues"},"license":"BSD-3-Clause","author":{"name":"Sunao Hara","email":"sunao.hara@gmail.com"},"main":"lib/index.js","types":"./lib/index.d.ts","repository":{"type":"git","url":"https://github.com/naoh16/ipyaudioworklet"},"scripts":{"build":"yarn run build:lib && yarn run build:nbextension && yarn run build:labextension:dev && yarn run build:postprocess","build:prod":"yarn run build:lib && yarn run build:nbextension && yarn run build:labextension && yarn run build:postprocess","build:labextension":"jupyter labextension build .","build:labextension:dev":"jupyter labextension build --development True .","build:lib":"tsc","build:nbextension":"webpack","build:postprocess":"node build-post-process.js","clean":"yarn run clean:lib && yarn run clean:nbextension && yarn run clean:labextension","clean:lib":"rimraf lib","clean:labextension":"rimraf ipyaudioworklet/labextension","clean:nbextension":"rimraf ipyaudioworklet/nbextension/static/index.js","lint":"eslint . --ext .ts,.tsx --fix","lint:check":"eslint . --ext .ts,.tsx","prepack":"yarn run build:lib","test":"jest","watch":"npm-run-all -p watch:*","watch:lib":"tsc -w","watch:nbextension":"webpack --watch --mode=development","watch:labextension":"jupyter labextension watch ."},"dependencies":{"@jupyter-widgets/base":"^1.1.10 || ^2 || ^3 || ^4 || ^5 || ^6"},"devDependencies":{"@babel/core":"^7.5.0","@babel/preset-env":"^7.5.0","@jupyter-widgets/base-manager":"^1.0.2","@jupyterlab/builder":">=3.0.0","@lumino/application":"^1.6.0","@lumino/widgets":"^1.6.0","@types/audioworklet":"^0.0.50","@types/jest":"^26.0.0","@types/webpack-env":"^1.13.6","@typescript-eslint/eslint-plugin":"^3.6.0","@typescript-eslint/parser":"^3.6.0","acorn":"^7.2.0","copy-webpack-plugin":"^11.0.0","css-loader":"^3.2.0","eslint":"^7.4.0","eslint-config-prettier":"^6.11.0","eslint-plugin-prettier":"^3.1.4","fs-extra":"^7.0.0","identity-obj-proxy":"^3.0.0","jest":"^26.0.0","mkdirp":"^0.5.1","npm-run-all":"^4.1.3","prettier":"^2.0.5","rimraf":"^2.6.2","source-map-loader":"^1.1.3","style-loader":"^1.0.0","ts-jest":"^26.0.0","ts-loader":"^8.0.0","typescript":"~4.1.3","webpack":"^5.61.0","webpack-cli":"^4.0.0","write-file-webpack-plugin":"^4.5.1"},"jupyterlab":{"extension":"lib/plugin","outputDir":"ipyaudioworklet/labextension/","sharedPackages":{"@jupyter-widgets/base":{"bundled":false,"singleton":true}}}}')}},n={};return function e(o){var i=n[o];if(void 0!==i)return i.exports;var s=n[o]={exports:{}};return t[o].call(s.exports,s,s.exports,e),s.exports}(112)})()));
//# sourceMappingURL=index.js.map