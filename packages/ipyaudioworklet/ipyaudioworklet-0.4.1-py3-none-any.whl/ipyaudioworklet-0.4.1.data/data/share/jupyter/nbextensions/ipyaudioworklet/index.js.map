{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@naoh16/ipyaudioworklet/./src/audio.ts","webpack://@naoh16/ipyaudioworklet/./src/extension.ts","webpack://@naoh16/ipyaudioworklet/./src/index.ts","webpack://@naoh16/ipyaudioworklet/./src/version.ts","webpack://@naoh16/ipyaudioworklet/./src/widget.ts","webpack://@naoh16/ipyaudioworklet/external amd \"@jupyter-widgets/base\"","webpack://@naoh16/ipyaudioworklet/webpack/bootstrap","webpack://@naoh16/ipyaudioworklet/webpack/startup"],"sourcesContent":["class DataViewEx extends DataView {\n  setFourCC(offset: number, cc: string) {\n    for (let i = 0; i < 4; i++) {\n      this.setUint8(offset + i, cc.charCodeAt(i));\n    }\n  }\n}\n\nfunction encodeAudioAsWavfile(audiodata: any[], settings: MediaTrackSettings) {\n  // console.assert(settings.sampleSize == 16, \"sampleSize (Bit-per-sample) should be 16.\", settings);\n  if (settings.sampleSize !== 16) {\n    console.log(\n      'Warning: SampleSize is not 16 [bit].\\n',\n      'The sound is forcely quantized as int16 (signed short) sound.',\n      settings\n    );\n  }\n  //console.assert(settings.channelCount == 1, \"#Channel should be one (monoral).\", settings);\n  if (settings.channelCount !== 1) {\n    console.log(\n      'Warning: #Channel is not 1 (monoral).\\n',\n      'The sound is forcely converted to monaural sound by \"(L+R)/2\" method.',\n      settings\n    );\n  }\n\n  // see WAVEFORMAT_EX\n  // https://learn.microsoft.com/ja-jp/windows/win32/api/mmeapi/ns-mmeapi-waveformatex\n  const _nSamplesPerSec = settings.sampleRate || 48000; // ex. 48000 [Hz]\n  const _nChannels = 1; // settings.channelCount;   // ex. 1 [ch]\n  const _wBitsPerSample = 16; // settings.sampleSize || 16;     // ex. 16 [bit]\n  const _nBlockAlign = (_nChannels * _wBitsPerSample) / 8; // ex. 2 [byte]\n  const _nAvgBytesPerSec = _nBlockAlign * _nSamplesPerSec; // ex. 96000 [byte/sec]\n\n  const dataLengthSample = buffers.reduce((a, v) => a + v.length, 0);\n  const dataLengthByte = dataLengthSample * _nBlockAlign;\n\n  const arrayBuffer = new ArrayBuffer(44 + dataLengthByte);\n  const dv = new DataViewEx(arrayBuffer);\n  let offset = 0;\n\n  // RIFF Header\n  dv.setFourCC(offset, 'RIFF');\n  offset += 4;\n  dv.setUint32(offset, dataLengthByte + 36, true);\n  offset += 4; // filesize - 8\n  dv.setFourCC(offset, 'WAVE');\n  offset += 4;\n\n  // format chunk\n  dv.setFourCC(offset, 'fmt ');\n  offset += 4;\n  dv.setUint32(offset, 16, true);\n  offset += 4; // size = 16\n  dv.setUint16(offset, 1, true);\n  offset += 2; // WORD  wFormatTag\n  dv.setUint16(offset, _nChannels, true);\n  offset += 2; // WORD  nChannels\n  dv.setUint32(offset, _nSamplesPerSec, true);\n  offset += 4; // DWORD nSamplesPerSec\n  dv.setUint32(offset, _nAvgBytesPerSec, true);\n  offset += 4; // DWORD nAvgBytesPerSec\n  dv.setUint16(offset, _nBlockAlign, true);\n  offset += 2; // WORD  nBlockAlign\n  dv.setUint16(offset, _wBitsPerSample, true);\n  offset += 2; // WORD  wBitsPerSample\n  // PCM-format neglect 'cbSize'\n\n  // data chunk\n  dv.setFourCC(offset, 'data');\n  offset += 4;\n  dv.setUint32(offset, dataLengthByte, true);\n  offset += 4;\n\n  for (const v of audiodata) {\n    dv.setInt16(offset, Math.round(v * 32767), true);\n    offset += 2;\n  }\n\n  console.log(\n    'Info: sampling_rate = ' +\n      _nSamplesPerSec +\n      ' length = ' +\n      dataLengthSample +\n      ', [sample]'\n  );\n\n  return new Blob([dv], { type: 'audio/wav' });\n}\n\n//const AudioContext = window.AudioContext || window.webkitAudioContext;\nif (navigator.mediaDevices) {\n  console.log('Info: getUserMedia is supported.');\n} else {\n  console.log('Error: getUserMedia is not supported.');\n}\n\nlet audioContext: AudioContext;\nlet audioRecorderNode: any; //AudioWorkletNode;\nlet audioSource: MediaStreamAudioSourceNode;\nlet mediaConfig: MediaTrackSettings;\n\nasync function prepareCustomAudioProcessor(\n  module_url: string,\n  module_name: string\n) {\n  if (!audioContext) {\n    try {\n      audioContext = new AudioContext();\n      await audioContext.suspend(); // or resume() ?\n\n      await audioContext.audioWorklet.addModule(module_url);\n      audioRecorderNode = new AudioWorkletNode(audioContext, module_name);\n      console.log(audioContext);\n    } catch (e) {\n      console.log(e);\n      return null;\n    }\n  }\n  return audioRecorderNode;\n}\n\nasync function readyAudioSource(constraints: any = undefined) {\n  if (!audioSource) {\n    try {\n      if (!constraints) {\n        constraints = {\n          video: false,\n          audio: {\n            channelCount: { ideal: 1 } /** channelCount will be ignored... */,\n            sampleRate: { ideal: audioContext.sampleRate },\n            sampleSize: { ideal: 16 },\n            autoGainControl: false,\n            echoCancellation: false,\n            noiseSuppression: false,\n          },\n        };\n      }\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      audioSource = await audioContext.createMediaStreamSource(stream);\n      mediaConfig = await stream.getAudioTracks()[0].getSettings();\n      // Fix sampleRate\n      mediaConfig.sampleRate =\n        mediaConfig.sampleRate || audioContext.sampleRate;\n      console.log(stream);\n      console.log(mediaConfig);\n    } catch (e) {\n      console.log(e);\n      return null;\n    }\n  }\n  return audioSource;\n}\n\nlet buffers: any[] = [];\nexport let audiodata: any[] = []; //new Float32Array(_audiodata);\nexport let blob_url = '';\n\nexport async function run(\n  extension_url = '',\n  annealing_time_ms = 500\n): Promise<void> {\n  console.log('(1)');\n  await prepareCustomAudioProcessor(\n    extension_url + '/static/audio-processor.js',\n    'audio-reorder-processor'\n  );\n  console.log(audioRecorderNode);\n\n  console.log('(2)');\n  await readyAudioSource();\n\n  console.log('(3)');\n  await audioSource.connect(audioRecorderNode);\n\n  console.log('(4)');\n  await audioContext.resume();\n  await setTimeout(() => {\n    audioContext.suspend();\n  }, annealing_time_ms);\n  // In general, most of the recording device could not record just after the device booted up.\n  // Short wait will be make better result for the first take of recording.\n\n  return;\n}\n\nexport function getSampleRate(): number | undefined {\n  return mediaConfig.sampleRate || audioContext.sampleRate;\n}\n\nexport function resume(): void {\n  buffers = [];\n  audioRecorderNode.port.onmessage = (e: any) => {\n    buffers.push(e.data);\n  };\n  audioContext.resume();\n  audioRecorderNode.parameters\n    .get('isRecording')\n    .setValueAtTime(1, audioContext.currentTime);\n  console.log('recording');\n}\n\nexport function suspend(): void {\n  audioContext.suspend();\n  audioRecorderNode.parameters\n    .get('isRecording')\n    .setValueAtTime(0, audioContext.currentTime);\n  console.log('suspended');\n\n  const dataLengthSample = buffers.reduce((a, v) => a + v.length, 0);\n  audiodata = new Array(dataLengthSample);\n\n  let offset = 0;\n  for (const buffer of buffers) {\n    for (const value of buffer) {\n      audiodata[offset++] = value;\n    }\n  }\n\n  const blob = encodeAudioAsWavfile(audiodata, mediaConfig);\n  console.log(blob);\n  blob_url = URL.createObjectURL(blob);\n  //       var reader = new FileReader();\n  //       reader.readAsDataURL(blob);\n  //       reader.onloadend = function() {\n  //         var base64data = reader.result;\n  //         const uiLog = document.querySelector('div#log');\n  //         uiLog.innerHTML += '<div style=\"width:100%; overflow-wrap: anywhere;\"><code>' + base64data + '</code></div>';\n  //       }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n// Entry point for the notebook bundle containing custom model definitions.\n//\n// Setup notebook base URL\n//\n// Some static assets may be required by the custom widget javascript. The base\n// url for the notebook is not known at build time and is therefore computed\n// dynamically.\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n(window as any).__webpack_public_path__ =\n  document.querySelector('body')!.getAttribute('data-base-url') +\n  'nbextensions/ipyaudioworklet';\n\nexport * from './index';\n","// Copyright (c) Sunao Hara\n// Distributed under the terms of the Modified BSD License.\n\nexport * from './version';\nexport * from './widget';\n","// Copyright (c) Sunao Hara\n// Distributed under the terms of the Modified BSD License.\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst data = require('../package.json');\n\n/**\n * The _model_module_version/_view_module_version this package implements.\n *\n * The html widget manager assumes that this is the same as the npm package\n * version number.\n */\nexport const MODULE_VERSION = data.version;\n\n/*\n * The current package name.\n */\nexport const MODULE_NAME = data.name;\n","// Copyright (c) Sunao Hara\n// Distributed under the terms of the Modified BSD License.\n\nimport {\n  DOMWidgetModel,\n  DOMWidgetView,\n  ISerializers,\n} from '@jupyter-widgets/base';\n\nimport { MODULE_NAME, MODULE_VERSION } from './version';\n\nimport * as a from './audio';\n\nlet extensionUrl = '/lab';\ntry {\n  if (window.document.body.classList.contains('notebook_app')) {\n    // Jupyter Notebook 6.x\n    extensionUrl = '/nbextensions/ipyaudioworklet';\n  } else {\n    // Jupyter Lab 3, 4, or Jupyter Notebook 7.x\n    const e: any = window.document.querySelector('#jupyter-config-data');\n    const jconfig: any = JSON.parse(e.textContent);\n    extensionUrl =\n      jconfig['fullAppUrl'] + '/extensions/@naoh16/ipyaudioworklet';\n  }\n} catch (error) {\n  // nop\n}\n\n// Import the CSS\n//import '../css/widget.css';\n\nexport class AudioRecorderModel extends DOMWidgetModel {\n  defaults(): Backbone.ObjectHash {\n    return {\n      ...super.defaults(),\n      _model_name: AudioRecorderModel.model_name,\n      _model_module: AudioRecorderModel.model_module,\n      _model_module_version: AudioRecorderModel.model_module_version,\n      _view_name: AudioRecorderModel.view_name,\n      _view_module: AudioRecorderModel.view_module,\n      _view_module_version: AudioRecorderModel.view_module_version,\n\n      value: 'Audio Recorder',\n      audiodata: [],\n      blob_url: '',\n      filename: 'default.wav',\n    };\n  }\n\n  static serializers: ISerializers = {\n    ...DOMWidgetModel.serializers,\n    // Add any extra serializers here\n  };\n\n  static model_name = 'AudioRecorderModel';\n  static model_module = MODULE_NAME;\n  static model_module_version = MODULE_VERSION;\n  static view_name = 'AudioRecorderView'; // Set to null if no view\n  static view_module = MODULE_NAME; // Set to null if no view\n  static view_module_version = MODULE_VERSION;\n}\n\nexport class AudioRecorderView extends DOMWidgetView {\n  private _audioControl: HTMLAudioElement;\n  private _message: HTMLDivElement;\n  private _bootButton: HTMLButtonElement;\n  private _resumeButton: HTMLButtonElement;\n  private _suspendButton: HTMLButtonElement;\n  render(): any {\n    this.el.classList.add('jupyter-widgets');\n\n    this._message = document.createElement('div');\n    this.el.appendChild(this._message);\n\n    this._bootButton = document.createElement('button');\n    this._bootButton.classList.add(\n      'jupyter-widgets',\n      'jupyter-button',\n      'widget-button'\n    );\n    this._bootButton.textContent = 'Boot RECORDER';\n    this._bootButton.title = 'run()';\n    this.el.appendChild(this._bootButton);\n\n    this._resumeButton = document.createElement('button');\n    this._resumeButton.classList.add(\n      'jupyter-widgets',\n      'jupyter-button',\n      'widget-button'\n    );\n    this._resumeButton.disabled = true;\n    this._resumeButton.textContent = 'Record';\n    this._resumeButton.title = 'resume()';\n    this.el.appendChild(this._resumeButton);\n\n    this._suspendButton = document.createElement('button');\n    this._suspendButton.classList.add(\n      'jupyter-widgets',\n      'jupyter-button',\n      'widget-button'\n    );\n    this._suspendButton.disabled = true;\n    this._suspendButton.textContent = 'Stop';\n    this._suspendButton.title = 'suspend()';\n    this.el.appendChild(this._suspendButton);\n\n    this._audioControl = document.createElement('audio');\n    this._audioControl.controls = true;\n    this.el.appendChild(this._audioControl);\n\n    this.value_changed();\n\n    // Python --> JavaScipt update\n    this.model.on('change:value', this.value_changed, this);\n    this.model.on('msg:custom', this.on_msg, this);\n\n    // JavaScipt --> Python update\n    this._bootButton.onclick = this._onClickBootButton.bind(this);\n    this._resumeButton.onclick = this._onClickResumeButton.bind(this);\n    this._suspendButton.onclick = this._onClickSuspendButton.bind(this);\n  }\n\n  private value_changed(): void {\n    this._message.textContent = this.model.get('value');\n  }\n\n  private on_msg(command: any, buffers: any) {\n    switch (command.cmd) {\n      case 'run':\n        this._onClickBootButton();\n        break;\n      case 'resume':\n        this._onClickResumeButton();\n        break;\n      case 'suspend':\n        this._onClickSuspendButton();\n        break;\n    }\n  }\n\n  private _onClickBootButton() {\n    this.model.set('value', 'AudioRecorder is booting...');\n    this.model.save_changes();\n    a.run(extensionUrl).then((r) => {\n      const _sampleRate = a.getSampleRate() || -1;\n      this.model.set(\n        'value',\n        'AudioRecorder is ready (Sampling rate: ' +\n          String(_sampleRate) +\n          ' Hz).'\n      );\n      this.model.set('sampleRate', _sampleRate);\n      this.model.save_changes();\n\n      this._bootButton.disabled = true;\n      this._resumeButton.disabled = false;\n    });\n  }\n  private _onClickResumeButton() {\n    a.resume();\n    this.model.set('value', this._message.textContent + ' [RESUME]');\n    this.model.save_changes();\n\n    this._resumeButton.disabled = true;\n    this._suspendButton.disabled = false;\n  }\n  private _onClickSuspendButton() {\n    a.suspend();\n    //console.log(a.audiodata);\n    this.model.set('audiodata', a.audiodata);\n    this.model.set('blob_url', a.blob_url);\n    this.model.set('value', this._message.textContent + ' [SUSPEND]');\n    this.model.save_changes();\n\n    this._audioControl.src = a.blob_url;\n    this._audioControl.title = this.model.get('filename');\n    this._resumeButton.disabled = false;\n    this._suspendButton.disabled = true;\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__146__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(112);\n"],"names":["DataViewEx","DataView","setFourCC","offset","cc","i","this","setUint8","charCodeAt","audioContext","audioRecorderNode","audioSource","mediaConfig","navigator","mediaDevices","console","log","buffers","audiodata","blob_url","extension_url","annealing_time_ms","module_url","module_name","AudioContext","suspend","audioWorklet","addModule","AudioWorkletNode","e","prepareCustomAudioProcessor","constraints","video","audio","channelCount","ideal","sampleRate","sampleSize","autoGainControl","echoCancellation","noiseSuppression","stream","getUserMedia","createMediaStreamSource","getAudioTracks","getSettings","readyAudioSource","connect","resume","setTimeout","port","onmessage","push","data","parameters","get","setValueAtTime","currentTime","dataLengthSample","reduce","a","v","length","Array","buffer","value","blob","settings","_nSamplesPerSec","_nAvgBytesPerSec","dataLengthByte","arrayBuffer","ArrayBuffer","dv","setUint32","setUint16","setInt16","Math","round","Blob","type","encodeAudioAsWavfile","URL","createObjectURL","window","__webpack_public_path__","document","querySelector","getAttribute","MODULE_VERSION","version","MODULE_NAME","name","extensionUrl","body","classList","contains","jconfig","JSON","parse","textContent","error","AudioRecorderModel","DOMWidgetModel","defaults","super","_model_name","model_name","_model_module","model_module","_model_module_version","model_module_version","_view_name","view_name","_view_module","view_module","_view_module_version","view_module_version","filename","serializers","AudioRecorderView","DOMWidgetView","render","el","add","_message","createElement","appendChild","_bootButton","title","_resumeButton","disabled","_suspendButton","_audioControl","controls","value_changed","model","on","on_msg","onclick","_onClickBootButton","bind","_onClickResumeButton","_onClickSuspendButton","command","cmd","set","save_changes","run","then","r","_sampleRate","getSampleRate","String","src","module","exports","__WEBPACK_EXTERNAL_MODULE__146__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}