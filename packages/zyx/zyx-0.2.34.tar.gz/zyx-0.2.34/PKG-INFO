Metadata-Version: 2.1
Name: zyx
Version: 0.2.34
Summary: A fun, hyper minimal AI toolkit. Built on the inspirations of marvin-ai.
Author: Hammad Saeed
Author-email: hammad@supportvectors.com
Requires-Python: >=3.10,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: instructor (>=1.3.7,<2.0.0)
Requires-Dist: litellm (>=1.43.9,<2.0.0)
Requires-Dist: loguru (>=0.7.2,<0.8.0)
Requires-Dist: networkx (>=3.3,<4.0)
Requires-Dist: ollama (>=0.3.1,<0.4.0)
Requires-Dist: rich (>=13.7.1,<14.0.0)
Requires-Dist: textual (>=0.76.0,<0.77.0)
Description-Content-Type: text/markdown


## **hammad-dev** - *A collection of fun things I've made*

### **zyx** - *Super Duper Lightweight AI functions, built on LiteLLM & Instructor*

**Install**
```bash
pip install zyx
```

</br>

**Chat Completions w/ Pydantic Outputs & Tool Calling**
```python
import zyx
from pydantic import BaseModel

# Send a standard completion
zyx.completion("Hello how are you?")

# Send a completion with a Pydantic output
class Response(BaseModel):
    response: str

zyx.completion("Hello how are you?", response_model = Response)

# Call a tool
zyx.completion(
    "Hello how are you?,
    model = "ollama/llama3.1
    response_model = Response,
    tools = [some_tool()],

    # Optionally Run Tool Execution as well
    # This parameter will result in more than 1 LLM completion, for tool interpretation
    run_tools = True
)
```
