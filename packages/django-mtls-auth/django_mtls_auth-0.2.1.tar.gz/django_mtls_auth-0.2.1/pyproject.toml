[tool.poetry]
name = "django-mtls-auth"
version = "0.2.1"
description = "Enable mMTLS authentication to your Django projects"
authors = ["Frederic Tschannen <fretscha@umx.net>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/fretscha/django-mtls-auth"
repository = "https://github.com/fretscha/django-mtls-auth"
documentation = "https://django-mtls-auth.readthedocs.io"
keywords = [
    "django",
    "tls",
    "ssl",
    "client-certificate",
    "authentication",
    "nginx",
    "apache2",
    "reverse-proxy",
]
packages = [{ include = "mtls_auth", from = "." }]
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.1",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP",
    "Development Status :: 4 - Beta",
]
include = ["LICENSE.md"]


[tool.poetry.dependencies]
python = ">=3.10,<4.0"
django = ">=4.2,<5.2"


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "node_modules",
    "site-packages",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
#dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"


[tool.poetry.group.dev.dependencies]
ruff = "0.5.7"
nox = "^2024.4.15"
pytest-django = "^4.8.0"
pytest-cov = "^5.0.0"


[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
addopts = "--nomigrations --cov=. --cov-report=html --cov-report=term-missing"
python_files = ["test_*.py", "tests.py", "test.py"]

[tool.coverage.run]
omit = [
    "*/tests.py",
    "*/apps.py",
    "*/urls.py",
    "*/migrations/*",
    "example/*",
    "tests/*",
    "conftest.py",
    "manage.py",
    "noxfile.py",
]
source = ["./*"]

[build-system]
requires = ["poetry>=1.8"]
build-backend = "poetry.masonry.api"
