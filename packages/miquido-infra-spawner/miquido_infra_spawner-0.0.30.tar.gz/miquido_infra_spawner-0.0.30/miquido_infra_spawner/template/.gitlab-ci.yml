---
include:
    -   remote: 'https://raw.githubusercontent.com/miquido/gitlab-templates/1.3.86/docker-toolkit.yml'
    -   remote: 'https://raw.githubusercontent.com/miquido/gitlab-templates/1.3.86/terraform-toolkit.yml'


variables:
    TF_PLUGIN_CACHE_DIR: "${CI_PROJECT_DIR}/plugin-cache"

cache:
    - key: "$CI_COMMIT_SHA"
      paths:
          - $CI_PROJECT_DIR/$TF_ROOT/.terraform
    - key:
        files:
          - $CI_PROJECT_DIR/$TF_ROOT/.terraform.lock.hcl
      paths:
        - ${CI_PROJECT_DIR}/plugin-cache


apply-<ENVIRONMENT>:
    extends: .tf-apply
    variables:
        TF_ROOT: <ENVIRONMENT>
    environment:
        name: <ENVIRONMENT>
        url: <SERVICE_URL>
        on_stop: destroy-<ENVIRONMENT>
    rules:
        - if: $STOP_ENV != null
          when: never
        - when: on_success

destroy-<ENVIRONMENT>:
    extends: .tf-destroy
    variables:
        TF_ROOT: <ENVIRONMENT>
    environment:
        name: <ENVIRONMENT>
        url: <SERVICE_URL>
        action: stop
    needs:
        - apply-<ENVIRONMENT>
    rules:
        - if: $STOP_ENV != null
          when: never
        - when: manual

destroy-schedule-<ENVIRONMENT>:
    extends: .tf-destroy
    variables:
        TF_ROOT: <ENVIRONMENT>
    environment:
        name: <ENVIRONMENT>
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule" && $STOP_ENV != null

.tf-apply:
  id_tokens:
    GITLAB_OIDC_TOKEN:
      aud: https://gitlab.com
  variables:
    PLAN: plan.cache
    PLAN_JSON: plan.json
    TF_VERSION: "1.9.2"
    ROLE_ARN: $TF_ROLE_ARN
  image:
    name: hashicorp/terraform:$TF_VERSION
    entrypoint: [""]
  before_script:
    - apk add --no-cache aws-cli
    - !reference [.oidc-login, script]
    - cd $TF_ROOT
    - cp $SECRETS secrets.auto.tfvars || true
    - apk add jq
  script:
    - aws sts get-caller-identity
    - terraform init -reconfigure -backend-config=password=${BACKEND_STATE_TOKEN} -backend-config=username=gitlab-ci-token
    - terraform apply -auto-approve
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: on_success
  retry: 1
  tags:
    - miquido
    - docker