"use strict";(self.webpackChunkpergamon_theme_server=self.webpackChunkpergamon_theme_server||[]).push([[675],{675:(e,t,o)=>{o.r(t),o.d(t,{default:()=>c});var r=o(765),n=o(74),s=o(465);const a={id:"pergamon_theme_server:plugin",description:"A JupyterLab extension.",autoStart:!0,optional:[r.ISettingRegistry],activate:(e,t)=>{console.log("JupyterLab extension pergamon_theme_server is activated!!!"),t&&t.load(a.id).then((e=>{console.log("pergamon_theme_server settings loaded:",e.composite)})).catch((e=>{console.error("Failed to load settings for pergamon_theme_server.",e)})),async function(e="",t={}){const o=s.ServerConnection.makeSettings(),r=n.URLExt.join(o.baseUrl,"",e);let a;try{a=await s.ServerConnection.makeRequest(r,t,o)}catch(e){throw new s.ServerConnection.NetworkError(e)}let c=await a.text();if(c.length>0)try{c=JSON.parse(c)}catch(e){console.log("Not a JSON response body.",a)}if(!a.ok)throw new s.ServerConnection.ResponseError(a,c.message||c);return c}("customcss").then((e=>{var t=document.head||document.getElementsByTagName("head")[0],o=document.createElement("style");t.appendChild(o),o.type="text/css",o.appendChild(document.createTextNode(e)),console.log(e)})).catch((e=>{console.error(`The pergamon_theme_server server extension appears to be missing.\n${e}`)}))}},c=a}}]);