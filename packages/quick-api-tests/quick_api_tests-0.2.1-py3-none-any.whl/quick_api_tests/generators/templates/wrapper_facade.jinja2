# coding: utf-8
"""
    {{ service_name|to_snake_case }}

    Generated by quick https://github.com/ValeriyMenshikov/quick-api-tests)

    Do not edit the class manually.
"""  # noqa: E501


{%- set service_name = service_name %}
{%- set api_names = api_names %}

{%- if client_type == 'http' %}
from quick_api_tests.http_client.configuration import Configuration
{%- for api_name in api_names %}
from logic.http.{{ service_name|to_snake_case }}.{{ api_name|to_snake_case }}_api import {{ api_name|to_camel_case }}Api
{%- endfor %}

{% elif client_type == 'grpc' %}
{%- for api_name in api_names %}
from logic.grpc.{{ service_name|to_snake_case }}.{{ api_name|to_snake_case }}_api import {{ api_name|to_camel_case }}Api
{%- endfor %}
{% endif %}

class _{{ service_name|to_camel_case }}Facade:
    """
    Класс обертка необходимый для связки классов логики, необходим,
    чтобы при перегенерации автоматически расширять композитый фасад классами логики сервиса.
    """
    {%- if client_type == 'http' %}
    def __init__(self, configuration: Configuration):
        {% for api_name in api_names %}self.{{ api_name|to_snake_case }}_api = {{ api_name|to_camel_case }}Api(configuration)
        {% endfor %}
    {% elif client_type == 'grpc' %}
    def __init__(self, server_address: str) -> None:
        {% for api_name in api_names %}self.{{ api_name|to_snake_case }}_api = {{ api_name|to_camel_case }}Api(server_address)
        {% endfor %}
    {% endif %}