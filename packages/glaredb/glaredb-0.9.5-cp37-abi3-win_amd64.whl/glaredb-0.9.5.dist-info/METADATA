Metadata-Version: 2.3
Name: glaredb
Version: 0.9.5
Classifier: Programming Language :: Rust
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Requires-Dist: great-expectations ; extra == 'great-expectations'
Requires-Dist: great-expectations[postgresql] ; extra == 'great-expectations'
Requires-Dist: pandas ; extra == 'pandas'
Requires-Dist: pandasai ; extra == 'pandas'
Requires-Dist: polars ; extra == 'polars'
Requires-Dist: pyarrow ; extra == 'pyarrow'
Provides-Extra: great-expectations
Provides-Extra: pandas
Provides-Extra: polars
Provides-Extra: pyarrow
License-File: LICENSE
Summary: GlareDB is a fast SQL database for querying and analyzing distributed data.
Requires-Python: >=3.7
Description-Content-Type: text/markdown; charset=UTF-8; variant=GFM
Project-URL: Homepage, https://glaredb.com
Project-URL: Documentation, https://docs.glaredb.com
Project-URL: Repository, https://github.com/glaredb/glaredb
Project-URL: Changelog, https://github.com/glaredb/glaredb/releases

# Python bindings for GlareDB

Check out the [GlareDB repo](https://github.com/GlareDB/glaredb) to learn more.

Use GlareDB directly in Python to query and analyzer a variety of data sources,
including Polars and Pandas data frames.

```python
import glaredb
import polars as pl

df = pl.DataFrame(
    {
        "A": [1, 2, 3, 4, 5],
        "fruits": ["banana", "banana", "apple", "apple", "banana"],
        "B": [5, 4, 3, 2, 1],
        "cars": ["beetle", "audi", "beetle", "beetle", "beetle"],
    }
)

con = glaredb.connect()

df = con.sql("select * from df where fruits = 'banana'").to_polars();

print(df)

# shape: (3, 4)
# ┌─────┬────────┬─────┬────────┐
# │ A   ┆ fruits ┆ B   ┆ cars   │
# │ --- ┆ ---    ┆ --- ┆ ---    │
# │ i64 ┆ str    ┆ i64 ┆ str    │
# ╞═════╪════════╪═════╪════════╡
# │ 1   ┆ banana ┆ 5   ┆ beetle │
# │ 2   ┆ banana ┆ 4   ┆ audi   │
# │ 5   ┆ banana ┆ 1   ┆ beetle │
# └─────┴────────┴─────┴────────┘
```

