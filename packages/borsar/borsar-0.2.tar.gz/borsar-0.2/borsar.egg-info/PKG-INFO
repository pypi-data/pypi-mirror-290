Metadata-Version: 2.1
Name: borsar
Version: 0.2
Summary: tools for electrophysiological analysis, especially cluster-based tests.
Maintainer-email: Miko≈Çaj Magnuski <mmagnuski@swps.edu.pl>
License: BSD-3-Clause
Project-URL: Homepage, https://github.com/mmagnuski/borsar
Keywords: neuroscience,neuroimaging,MEG,EEG,brain
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development
Classifier: Topic :: Scientific/Engineering
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=1.15.4
Requires-Dist: scipy>=1.7.1
Requires-Dist: matplotlib>=3.5.0
Requires-Dist: pandas
Requires-Dist: scikit-image
Requires-Dist: mne>=1.0.0
Requires-Dist: tqdm
Requires-Dist: h5io
Requires-Dist: h5py

[![CircleCI](https://dl.circleci.com/status-badge/img/gh/mmagnuski/borsar/tree/master.svg?style=svg)](https://dl.circleci.com/status-badge/redirect/gh/mmagnuski/borsar/tree/master)
[![Coverage Status](https://codecov.io/gh/mmagnuski/borsar/branch/master/graph/badge.svg)](https://codecov.io/gh/mmagnuski/borsar)

Various tools, objects and functions for EEG/MEG data analysis and visualisation. Some functionality that is available here may
be later moved to [mne-python](https://martinos.org/mne/dev/index.html).

`borsar` includes:
* `PSD` object for manipulation of power spectral results
* `Clusters` object for storage, manipulation and plotting of clutser-based results, both in channel and sourcee space
* efficient regression for multichannel data (`compute_regression_t`)
* `cluster_based_regression` to perform regression tests in cluster-based permutation framework
* numpy and numba implementations of cluster-based permutation tests in 3d space (for example in `channels x frequency x time` space) with optional filtering by minimum number of adjacent channels (`min_adj_ch`, equivalent of `minnbchan` in fieldtrip).
* `Topo` object for topomap plots that retains the topomap state, allows to mark channels, efficiently update data, change contour line width and style for one or multiple topomaps.


## Installation
To get the official borsar version install using pip:
```
pip install borsar
```
The PyPI version may be sometimes behind the GitHub version so to install from GitHub you can use pip in the following way:
```
pip install git+https://github.com/mmagnuski/borsar
```
However, if you plan to frequently update the dev version and contribute to `borsar`, install by cloning the repo with
git and installing in dev mode:
```
cd where_you_want_to_download_borsar
git clone https://github.com/mmagnuski/borsar
cd borsar
pip install -e .
```
the second and third method require [git](https://git-scm.com/) to be installed.

## Documentation
Go to the [online documentation](https://mmagnuski.github.io/borsar.github.io/index.html) for more information about usage examples or full API docs.
:construction: be warned that documentation is under contstruction :construction:
