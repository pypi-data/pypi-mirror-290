{"version":3,"sources":["AntMenu.tsx","index.tsx"],"names":["Icons","parseMenuItems","data","iconSize","map","item","menuItem","key","label","icon","undefined","children","type","disabled","startsWith","React","createElement","className","concat","style","fontSize","Icon","error","console","warn","match","dangerouslySetInnerHTML","__html","Object","keys","AllIcons","forEach","withStreamlitConnection","props","_props$args","args","menu_data","defaultSelectedKeys","defaultOpenKeys","additionalHeight","close_auto","multiple","css_styling","theme","menu_click","modus","generall_css_styling","inlineIndent","_useState","useState","_useState2","_slicedToArray","openKeys","setOpenKeys","_useState3","_useState4","selectedKeys","setSelectedKeys","rootSubmenuKeys","useEffect","menuElement","document","querySelector","resizeObserver","ResizeObserver","entries","_step","_iterator","_createForOfIteratorHelper","s","n","done","height","value","target","clientHeight","Streamlit","setFrameHeight","err","e","f","observe","unobserve","setComponentValue","log","Fragment","Helmet","src","crossOrigin","id","Menu","mode","onOpenChange","latestOpenKey","find","indexOf","_objectSpread","width","borderRight","overflow","borderRadius","items","onClick","_ref","includes","filter","k","_toConsumableArray","ReactDOM","render","StrictMode","MenuComponent","getElementById"],"mappings":"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","file":"static/js/main.fc99ca09.chunk.js","sourcesContent":["import { Menu } from \"antd\";\r\nimport { MenuProps } from \"antd/lib/menu\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ComponentProps,\r\n  Streamlit,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\";\r\nimport * as AllIcons from \"@ant-design/icons\";\r\nimport { ComponentType } from \"react\";\r\nimport { Helmet } from 'react-helmet';\r\n\r\n\r\n// Create a mapping of all available Ant Design icons\r\nconst Icons: Record<string, ComponentType<any>> = {};\r\nObject.keys(AllIcons).forEach((key) => {\r\n  Icons[key as keyof typeof AllIcons] = AllIcons[key as keyof typeof AllIcons] as ComponentType<any>;\r\n});\r\n\r\n\r\ninterface MenuItem {\r\n  key: string;\r\n  label: string | null;\r\n  icon?: React.ReactNode;\r\n  children?: MenuItem[];\r\n  type?: \"group\" | \"divider\" | \"text\" | null;  // added \"text\" type\r\n  disabled?: boolean;\r\n}\r\n\r\n\r\nfunction parseMenuItems(data: any[], iconSize: string): MenuItem[] {\r\n  return data.map((item: any) => {\r\n    const menuItem: MenuItem = {\r\n      key: item.key,\r\n      label: item.label === null ? null : \"\",\r\n      icon: undefined,\r\n      children: item.children ? parseMenuItems(item.children, iconSize) : undefined,\r\n      type: item.type || undefined,\r\n      disabled: item.disabled ? true : false,\r\n    };\r\n\r\n    if (item.icon) {\r\n      try {\r\n        if (item.icon.startsWith('fa-')) {\r\n          // If the icon is a FontAwesome icon, create an <i> tag\r\n          menuItem.icon = <i className={`fa ${item.icon}`} style={{ fontSize: iconSize }} />;\r\n        } else {\r\n          const Icon = Icons[item.icon];\r\n          if (Icon) {\r\n            menuItem.icon = React.createElement(Icon, {\r\n              style: { fontSize: iconSize }\r\n            });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.warn(`Failed to create icon for \"${item.icon}\":`, error);\r\n      }\r\n    }\r\n\r\n    if (item.label && item.label !== null) {\r\n      if (item.label.match(/<(.*?)>/)) {\r\n        menuItem.label = (\r\n          <span\r\n            dangerouslySetInnerHTML={{ __html: item.label }}\r\n          ></span>\r\n        ) as unknown as string;\r\n      } else {\r\n        menuItem.label = item.label as string;\r\n      }\r\n    }\r\n\r\n    return menuItem;\r\n  });\r\n}\r\n\r\n\r\n\r\n/**\r\n * A React component that renders an Ant Design menu based on the provided menu data.\r\n */\r\nconst MenuComponent = (props: ComponentProps) => {\r\n  const { menu_data, key, defaultSelectedKeys, defaultOpenKeys, additionalHeight, close_auto, multiple, css_styling, theme,menu_click, iconSize,modus,generall_css_styling, inlineIndent} = props.args;\r\n  const [openKeys, setOpenKeys] = useState<string[]>([]);\r\n  const [selectedKeys, setSelectedKeys] = useState<string[]>([]);\r\n  const rootSubmenuKeys = menu_data.map((item: any) => item.key);\r\n\r\n  useEffect(() => {\r\n    // Select the menu element\r\n    const menuElement = document.querySelector('.ant-menu');\r\n  \r\n    // If the menu exists, observe changes in its size\r\n    if (menuElement) {\r\n      const resizeObserver = new ResizeObserver(entries => {\r\n        for (let entry of entries) {\r\n          // Set the height when the size of the menu changes\r\n          const height = entry.target.clientHeight;\r\n          Streamlit.setFrameHeight(height + additionalHeight);\r\n        }\r\n      });\r\n  \r\n      // Start observing\r\n      resizeObserver.observe(menuElement);\r\n  \r\n      // Cleanup\r\n      return () => {\r\n        resizeObserver.unobserve(menuElement);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  const onOpenChange: MenuProps['onOpenChange'] = (keys) => {\r\n    const latestOpenKey = keys.find((key) => openKeys.indexOf(key) === -1);\r\n    if (rootSubmenuKeys.indexOf(latestOpenKey!) === -1) {\r\n      setOpenKeys(keys);\r\n    \r\n    } else {\r\n      if (menu_click == true) {\r\n        Streamlit.setComponentValue(keys);\r\n      }\r\n\r\n      if (close_auto == true) {\r\n      setOpenKeys(latestOpenKey ? [latestOpenKey] : []);\r\n      \r\n    } else {\r\n      setOpenKeys(keys);  // Keep all keys\r\n    }\r\n\r\n  };\r\n  };\r\n\r\n\r\n  const onClick = ({ key }: { key: string }) => {\r\n    if (multiple) {\r\n      if (selectedKeys.includes(key)) {\r\n        setSelectedKeys(selectedKeys.filter(k => k !== key));\r\n      } else {\r\n        setSelectedKeys([...selectedKeys, key]);\r\n      }\r\n    } else {\r\n      setSelectedKeys([key]);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    Streamlit.setComponentValue(selectedKeys);\r\n  }, [selectedKeys]);\r\n\r\n  console.log('Default Open Keys:', defaultOpenKeys);\r\nconsole.log('Default Selected Keys:', defaultSelectedKeys);\r\n\r\n \r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <script\r\n          src=\"https://kit.fontawesome.com/c7cbba6207.js\"\r\n          crossOrigin=\"anonymous\"\r\n          id=\"font-awesome-icons\"\r\n        />\r\n      </Helmet>\r\n     \r\n        <style dangerouslySetInnerHTML={{ __html: generall_css_styling }} />\r\n      <Menu\r\n        id={key}\r\n        mode={modus}\r\n        openKeys={openKeys}\r\n        onOpenChange={onOpenChange}\r\n        inlineIndent={inlineIndent}\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          borderRight: 0,\r\n          overflow: \"auto\",\r\n          borderRadius: \"20px\",\r\n          ...css_styling\r\n        }}\r\n        theme={theme}\r\n        items={parseMenuItems(menu_data, iconSize)}\r\n        multiple={multiple}\r\n        defaultSelectedKeys={defaultSelectedKeys}\r\n        defaultOpenKeys={defaultOpenKeys}\r\n        onClick={onClick}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default withStreamlitConnection(MenuComponent);","\r\nimport React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport MenuComponent from \"./AntMenu\"\r\n\r\n// Lots of import to define a Styletron engine and load the light theme of baseui\r\n\r\n\r\n// Wrap your CustomSlider with the baseui them\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MenuComponent />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)"],"sourceRoot":""}