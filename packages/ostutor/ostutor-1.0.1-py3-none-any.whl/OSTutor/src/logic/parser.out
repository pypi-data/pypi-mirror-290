Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> S
Rule 1     S -> S Essential
Rule 2     S -> S Optional
Rule 3     S -> Essential
Rule 4     S -> empty
Rule 5     Essential -> ITEM
Rule 6     Optional -> LBRACKET ITEMS RBRACKET
Rule 7     ITEMS -> ITEMS Optional
Rule 8     ITEMS -> ITEMS Essential
Rule 9     ITEMS -> Optional
Rule 10    ITEMS -> Essential
Rule 11    ITEMS -> empty
Rule 12    empty -> <empty>

Terminals, with rules where they appear

ITEM                 : 5
LBRACKET             : 6
RBRACKET             : 6
error                : 

Nonterminals, with rules where they appear

Essential            : 1 3 8 10
ITEMS                : 6 7 8
Optional             : 2 7 9
S                    : 1 2 0
empty                : 4 11

Parsing method: LALR

state 0

    (0) S' -> . S
    (1) S -> . S Essential
    (2) S -> . S Optional
    (3) S -> . Essential
    (4) S -> . empty
    (5) Essential -> . ITEM
    (12) empty -> .

  ! shift/reduce conflict for ITEM resolved as shift
    ITEM            shift and go to state 4
    LBRACKET        reduce using rule 12 (empty -> .)
    $end            reduce using rule 12 (empty -> .)

  ! ITEM            [ reduce using rule 12 (empty -> .) ]

    S                              shift and go to state 1
    Essential                      shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> S .
    (1) S -> S . Essential
    (2) S -> S . Optional
    (5) Essential -> . ITEM
    (6) Optional -> . LBRACKET ITEMS RBRACKET

    ITEM            shift and go to state 4
    LBRACKET        shift and go to state 7

    Essential                      shift and go to state 5
    Optional                       shift and go to state 6

state 2

    (3) S -> Essential .

    ITEM            reduce using rule 3 (S -> Essential .)
    LBRACKET        reduce using rule 3 (S -> Essential .)
    $end            reduce using rule 3 (S -> Essential .)


state 3

    (4) S -> empty .

    ITEM            reduce using rule 4 (S -> empty .)
    LBRACKET        reduce using rule 4 (S -> empty .)
    $end            reduce using rule 4 (S -> empty .)


state 4

    (5) Essential -> ITEM .

    ITEM            reduce using rule 5 (Essential -> ITEM .)
    LBRACKET        reduce using rule 5 (Essential -> ITEM .)
    $end            reduce using rule 5 (Essential -> ITEM .)
    RBRACKET        reduce using rule 5 (Essential -> ITEM .)


state 5

    (1) S -> S Essential .

    ITEM            reduce using rule 1 (S -> S Essential .)
    LBRACKET        reduce using rule 1 (S -> S Essential .)
    $end            reduce using rule 1 (S -> S Essential .)


state 6

    (2) S -> S Optional .

    ITEM            reduce using rule 2 (S -> S Optional .)
    LBRACKET        reduce using rule 2 (S -> S Optional .)
    $end            reduce using rule 2 (S -> S Optional .)


state 7

    (6) Optional -> LBRACKET . ITEMS RBRACKET
    (7) ITEMS -> . ITEMS Optional
    (8) ITEMS -> . ITEMS Essential
    (9) ITEMS -> . Optional
    (10) ITEMS -> . Essential
    (11) ITEMS -> . empty
    (6) Optional -> . LBRACKET ITEMS RBRACKET
    (5) Essential -> . ITEM
    (12) empty -> .

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for ITEM resolved as shift
    LBRACKET        shift and go to state 7
    ITEM            shift and go to state 4
    RBRACKET        reduce using rule 12 (empty -> .)

  ! LBRACKET        [ reduce using rule 12 (empty -> .) ]
  ! ITEM            [ reduce using rule 12 (empty -> .) ]

    ITEMS                          shift and go to state 8
    Optional                       shift and go to state 9
    Essential                      shift and go to state 10
    empty                          shift and go to state 11

state 8

    (6) Optional -> LBRACKET ITEMS . RBRACKET
    (7) ITEMS -> ITEMS . Optional
    (8) ITEMS -> ITEMS . Essential
    (6) Optional -> . LBRACKET ITEMS RBRACKET
    (5) Essential -> . ITEM

    RBRACKET        shift and go to state 12
    LBRACKET        shift and go to state 7
    ITEM            shift and go to state 4

    Optional                       shift and go to state 13
    Essential                      shift and go to state 14

state 9

    (9) ITEMS -> Optional .

    RBRACKET        reduce using rule 9 (ITEMS -> Optional .)
    LBRACKET        reduce using rule 9 (ITEMS -> Optional .)
    ITEM            reduce using rule 9 (ITEMS -> Optional .)


state 10

    (10) ITEMS -> Essential .

    RBRACKET        reduce using rule 10 (ITEMS -> Essential .)
    LBRACKET        reduce using rule 10 (ITEMS -> Essential .)
    ITEM            reduce using rule 10 (ITEMS -> Essential .)


state 11

    (11) ITEMS -> empty .

    RBRACKET        reduce using rule 11 (ITEMS -> empty .)
    LBRACKET        reduce using rule 11 (ITEMS -> empty .)
    ITEM            reduce using rule 11 (ITEMS -> empty .)


state 12

    (6) Optional -> LBRACKET ITEMS RBRACKET .

    ITEM            reduce using rule 6 (Optional -> LBRACKET ITEMS RBRACKET .)
    LBRACKET        reduce using rule 6 (Optional -> LBRACKET ITEMS RBRACKET .)
    $end            reduce using rule 6 (Optional -> LBRACKET ITEMS RBRACKET .)
    RBRACKET        reduce using rule 6 (Optional -> LBRACKET ITEMS RBRACKET .)


state 13

    (7) ITEMS -> ITEMS Optional .

    RBRACKET        reduce using rule 7 (ITEMS -> ITEMS Optional .)
    LBRACKET        reduce using rule 7 (ITEMS -> ITEMS Optional .)
    ITEM            reduce using rule 7 (ITEMS -> ITEMS Optional .)


state 14

    (8) ITEMS -> ITEMS Essential .

    RBRACKET        reduce using rule 8 (ITEMS -> ITEMS Essential .)
    LBRACKET        reduce using rule 8 (ITEMS -> ITEMS Essential .)
    ITEM            reduce using rule 8 (ITEMS -> ITEMS Essential .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ITEM in state 0 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 7 resolved as shift
WARNING: shift/reduce conflict for ITEM in state 7 resolved as shift
