[metadata]
name = stellarphot
author = Matt Craig
author_email = mattwcraig@gmail.com
description = A package for performing stellar photometry.
long_description = This is a package for doing stellar photometry that relies on astropy.
license = BSD 3-Clause
license_file = licenses/LICENSE.rst
url = https://github.com/stellarphot/stellarphot
edit_on_github = False
github_project = stellarphot/stellarphot

[options]
install_requires = 
	astropy >=5
	astroquery
	ccdproc
	ginga
	ipywidgets
	bottleneck
	photutils >=1
	matplotlib
	pandas
	pyyaml
	astrowidgets
	ipyfilechooser
python_requires = >=3.7
setup_requires = setuptools_scm
zip_safe = False
use_2to3 = False
packages = find:

[options.extras_require]
exo_fitting = 
	batman-package
test = 
	pytest
	pytest-astropy
docs = 
	sphinx
	sphinx-astropy

[options.package_data]
* = *.c
stellarphot = data/*
stellarphot.differential_photometry.tests = data/*
stellarphot.io.tests = data/*
stellarphot.io = *.yml
stellarphot.tests = 
	coveragerc
	data/*
stellarphot.analysis = data/*
stellarphot.notebooks.photometry = *.ipynb

[tool:pytest]
minversion = 5.0
testpaths = "stellarphot" "docs"
astropy_header = true
norecursedirs = build docs/_build
doctest_plus = enabled
text_file_format = rst
addopts = -p no:warnings

[coverage:run]
source = stellarphot
omit = 
	*/_astropy_init*
	*/conftest*
	*/cython_version*
	*/setup_package*
	*/tests/*
	*/version*
	*/__init__.py

[coverage:report]
exclude_lines = 
	pragma: no cover
	
	except ImportError
	
	raise AssertionError
	raise NotImplementedError
	
	def main\(.*\):
	
	pragma: py{ignore_python_version}

[flake8]
select = E101,W191,W291,W292,W293,W391,E111,E112,E113,E901,E902
exclude = extern,sphinx,*parsetab.py,conftest.py,docs/conf.py,setup.py

[pycodestyle]
select = E101,W191,W291,W292,W293,W391,E111,E112,E113,E901,E902
exclude = extern,sphinx,*parsetab.py,conftest.py,docs/conf.py,setup.py

[egg_info]
tag_build = 
tag_date = 0

